// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: pos/pos_service.proto

package pos

import (
	common "github.com/KaguraGateway/cafelogos-grpc/pkg/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ProductType int32

const (
	ProductType_COFFEE ProductType = 0
	ProductType_OTHER  ProductType = 1
)

// Enum value maps for ProductType.
var (
	ProductType_name = map[int32]string{
		0: "COFFEE",
		1: "OTHER",
	}
	ProductType_value = map[string]int32{
		"COFFEE": 0,
		"OTHER":  1,
	}
)

func (x ProductType) Enum() *ProductType {
	p := new(ProductType)
	*p = x
	return p
}

func (x ProductType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProductType) Descriptor() protoreflect.EnumDescriptor {
	return file_pos_pos_service_proto_enumTypes[0].Descriptor()
}

func (ProductType) Type() protoreflect.EnumType {
	return &file_pos_pos_service_proto_enumTypes[0]
}

func (x ProductType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProductType.Descriptor instead.
func (ProductType) EnumDescriptor() ([]byte, []int) {
	return file_pos_pos_service_proto_rawDescGZIP(), []int{0}
}

// * Order
type OrderType int32

const (
	OrderType_EatIn   OrderType = 0
	OrderType_TakeOut OrderType = 1
)

// Enum value maps for OrderType.
var (
	OrderType_name = map[int32]string{
		0: "EatIn",
		1: "TakeOut",
	}
	OrderType_value = map[string]int32{
		"EatIn":   0,
		"TakeOut": 1,
	}
)

func (x OrderType) Enum() *OrderType {
	p := new(OrderType)
	*p = x
	return p
}

func (x OrderType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OrderType) Descriptor() protoreflect.EnumDescriptor {
	return file_pos_pos_service_proto_enumTypes[1].Descriptor()
}

func (OrderType) Type() protoreflect.EnumType {
	return &file_pos_pos_service_proto_enumTypes[1]
}

func (x OrderType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OrderType.Descriptor instead.
func (OrderType) EnumDescriptor() ([]byte, []int) {
	return file_pos_pos_service_proto_rawDescGZIP(), []int{1}
}

type DiscountType int32

const (
	DiscountType_PRICE DiscountType = 0
)

// Enum value maps for DiscountType.
var (
	DiscountType_name = map[int32]string{
		0: "PRICE",
	}
	DiscountType_value = map[string]int32{
		"PRICE": 0,
	}
)

func (x DiscountType) Enum() *DiscountType {
	p := new(DiscountType)
	*p = x
	return p
}

func (x DiscountType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DiscountType) Descriptor() protoreflect.EnumDescriptor {
	return file_pos_pos_service_proto_enumTypes[2].Descriptor()
}

func (DiscountType) Type() protoreflect.EnumType {
	return &file_pos_pos_service_proto_enumTypes[2]
}

func (x DiscountType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DiscountType.Descriptor instead.
func (DiscountType) EnumDescriptor() ([]byte, []int) {
	return file_pos_pos_service_proto_rawDescGZIP(), []int{2}
}

type PostOrderResponse_Code int32

const (
	PostOrderResponse_OK               PostOrderResponse_Code = 0
	PostOrderResponse_SOLD_OUT_PRODUCT PostOrderResponse_Code = 1
	PostOrderResponse_NOT_SOLD_PRODUCT PostOrderResponse_Code = 2
	PostOrderResponse_OTHER            PostOrderResponse_Code = 3
)

// Enum value maps for PostOrderResponse_Code.
var (
	PostOrderResponse_Code_name = map[int32]string{
		0: "OK",
		1: "SOLD_OUT_PRODUCT",
		2: "NOT_SOLD_PRODUCT",
		3: "OTHER",
	}
	PostOrderResponse_Code_value = map[string]int32{
		"OK":               0,
		"SOLD_OUT_PRODUCT": 1,
		"NOT_SOLD_PRODUCT": 2,
		"OTHER":            3,
	}
)

func (x PostOrderResponse_Code) Enum() *PostOrderResponse_Code {
	p := new(PostOrderResponse_Code)
	*p = x
	return p
}

func (x PostOrderResponse_Code) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PostOrderResponse_Code) Descriptor() protoreflect.EnumDescriptor {
	return file_pos_pos_service_proto_enumTypes[3].Descriptor()
}

func (PostOrderResponse_Code) Type() protoreflect.EnumType {
	return &file_pos_pos_service_proto_enumTypes[3]
}

func (x PostOrderResponse_Code) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PostOrderResponse_Code.Descriptor instead.
func (PostOrderResponse_Code) EnumDescriptor() ([]byte, []int) {
	return file_pos_pos_service_proto_rawDescGZIP(), []int{5, 0}
}

type Payment_PaymentType int32

const (
	Payment_CASH Payment_PaymentType = 0
)

// Enum value maps for Payment_PaymentType.
var (
	Payment_PaymentType_name = map[int32]string{
		0: "CASH",
	}
	Payment_PaymentType_value = map[string]int32{
		"CASH": 0,
	}
)

func (x Payment_PaymentType) Enum() *Payment_PaymentType {
	p := new(Payment_PaymentType)
	*p = x
	return p
}

func (x Payment_PaymentType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Payment_PaymentType) Descriptor() protoreflect.EnumDescriptor {
	return file_pos_pos_service_proto_enumTypes[4].Descriptor()
}

func (Payment_PaymentType) Type() protoreflect.EnumType {
	return &file_pos_pos_service_proto_enumTypes[4]
}

func (x Payment_PaymentType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Payment_PaymentType.Descriptor instead.
func (Payment_PaymentType) EnumDescriptor() ([]byte, []int) {
	return file_pos_pos_service_proto_rawDescGZIP(), []int{39, 0}
}

// *
// Request/Response
type GetOrdersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetOrdersRequest) Reset() {
	*x = GetOrdersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pos_pos_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrdersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrdersRequest) ProtoMessage() {}

func (x *GetOrdersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pos_pos_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrdersRequest.ProtoReflect.Descriptor instead.
func (*GetOrdersRequest) Descriptor() ([]byte, []int) {
	return file_pos_pos_service_proto_rawDescGZIP(), []int{0}
}

type GetOrdersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Orders []*Order `protobuf:"bytes,1,rep,name=orders,proto3" json:"orders,omitempty"`
}

func (x *GetOrdersResponse) Reset() {
	*x = GetOrdersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pos_pos_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrdersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrdersResponse) ProtoMessage() {}

func (x *GetOrdersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pos_pos_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrdersResponse.ProtoReflect.Descriptor instead.
func (*GetOrdersResponse) Descriptor() ([]byte, []int) {
	return file_pos_pos_service_proto_rawDescGZIP(), []int{1}
}

func (x *GetOrdersResponse) GetOrders() []*Order {
	if x != nil {
		return x.Orders
	}
	return nil
}

type GetOrderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Order *Order `protobuf:"bytes,1,opt,name=order,proto3" json:"order,omitempty"`
}

func (x *GetOrderResponse) Reset() {
	*x = GetOrderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pos_pos_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrderResponse) ProtoMessage() {}

func (x *GetOrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pos_pos_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrderResponse.ProtoReflect.Descriptor instead.
func (*GetOrderResponse) Descriptor() ([]byte, []int) {
	return file_pos_pos_service_proto_rawDescGZIP(), []int{2}
}

func (x *GetOrderResponse) GetOrder() *Order {
	if x != nil {
		return x.Order
	}
	return nil
}

type GetUnpaidOrdersBySeatIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SeatId string `protobuf:"bytes,1,opt,name=seat_id,json=seatId,proto3" json:"seat_id,omitempty"`
}

func (x *GetUnpaidOrdersBySeatIdRequest) Reset() {
	*x = GetUnpaidOrdersBySeatIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pos_pos_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUnpaidOrdersBySeatIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUnpaidOrdersBySeatIdRequest) ProtoMessage() {}

func (x *GetUnpaidOrdersBySeatIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pos_pos_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUnpaidOrdersBySeatIdRequest.ProtoReflect.Descriptor instead.
func (*GetUnpaidOrdersBySeatIdRequest) Descriptor() ([]byte, []int) {
	return file_pos_pos_service_proto_rawDescGZIP(), []int{3}
}

func (x *GetUnpaidOrdersBySeatIdRequest) GetSeatId() string {
	if x != nil {
		return x.SeatId
	}
	return ""
}

type PostOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Order *OrderParam `protobuf:"bytes,1,opt,name=order,proto3" json:"order,omitempty"`
}

func (x *PostOrderRequest) Reset() {
	*x = PostOrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pos_pos_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostOrderRequest) ProtoMessage() {}

func (x *PostOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pos_pos_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostOrderRequest.ProtoReflect.Descriptor instead.
func (*PostOrderRequest) Descriptor() ([]byte, []int) {
	return file_pos_pos_service_proto_rawDescGZIP(), []int{4}
}

func (x *PostOrderRequest) GetOrder() *OrderParam {
	if x != nil {
		return x.Order
	}
	return nil
}

type PostOrderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code         PostOrderResponse_Code `protobuf:"varint,1,opt,name=code,proto3,enum=cafelogos.pos.PostOrderResponse_Code" json:"code,omitempty"`
	ErrorMessage string                 `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	CallNumber   string                 `protobuf:"bytes,3,opt,name=call_number,json=callNumber,proto3" json:"call_number,omitempty"`
}

func (x *PostOrderResponse) Reset() {
	*x = PostOrderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pos_pos_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostOrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostOrderResponse) ProtoMessage() {}

func (x *PostOrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pos_pos_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostOrderResponse.ProtoReflect.Descriptor instead.
func (*PostOrderResponse) Descriptor() ([]byte, []int) {
	return file_pos_pos_service_proto_rawDescGZIP(), []int{5}
}

func (x *PostOrderResponse) GetCode() PostOrderResponse_Code {
	if x != nil {
		return x.Code
	}
	return PostOrderResponse_OK
}

func (x *PostOrderResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *PostOrderResponse) GetCallNumber() string {
	if x != nil {
		return x.CallNumber
	}
	return ""
}

type PostPaymentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payment *Payment `protobuf:"bytes,1,opt,name=payment,proto3" json:"payment,omitempty"`
}

func (x *PostPaymentRequest) Reset() {
	*x = PostPaymentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pos_pos_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostPaymentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostPaymentRequest) ProtoMessage() {}

func (x *PostPaymentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pos_pos_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostPaymentRequest.ProtoReflect.Descriptor instead.
func (*PostPaymentRequest) Descriptor() ([]byte, []int) {
	return file_pos_pos_service_proto_rawDescGZIP(), []int{6}
}

func (x *PostPaymentRequest) GetPayment() *Payment {
	if x != nil {
		return x.Payment
	}
	return nil
}

type UpdatePaymentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payment *Payment `protobuf:"bytes,1,opt,name=payment,proto3" json:"payment,omitempty"`
}

func (x *UpdatePaymentRequest) Reset() {
	*x = UpdatePaymentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pos_pos_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePaymentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePaymentRequest) ProtoMessage() {}

func (x *UpdatePaymentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pos_pos_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePaymentRequest.ProtoReflect.Descriptor instead.
func (*UpdatePaymentRequest) Descriptor() ([]byte, []int) {
	return file_pos_pos_service_proto_rawDescGZIP(), []int{7}
}

func (x *UpdatePaymentRequest) GetPayment() *Payment {
	if x != nil {
		return x.Payment
	}
	return nil
}

type PaymentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsOk           bool                 `protobuf:"varint,1,opt,name=is_ok,json=isOk,proto3" json:"is_ok,omitempty"`
	Payment        *Payment             `protobuf:"bytes,2,opt,name=payment,proto3" json:"payment,omitempty"`
	OrderResponses []*PostOrderResponse `protobuf:"bytes,3,rep,name=order_responses,json=orderResponses,proto3" json:"order_responses,omitempty"`
}

func (x *PaymentResponse) Reset() {
	*x = PaymentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pos_pos_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentResponse) ProtoMessage() {}

func (x *PaymentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pos_pos_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentResponse.ProtoReflect.Descriptor instead.
func (*PaymentResponse) Descriptor() ([]byte, []int) {
	return file_pos_pos_service_proto_rawDescGZIP(), []int{8}
}

func (x *PaymentResponse) GetIsOk() bool {
	if x != nil {
		return x.IsOk
	}
	return false
}

func (x *PaymentResponse) GetPayment() *Payment {
	if x != nil {
		return x.Payment
	}
	return nil
}

func (x *PaymentResponse) GetOrderResponses() []*PostOrderResponse {
	if x != nil {
		return x.OrderResponses
	}
	return nil
}

type DeleteOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId string `protobuf:"bytes,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
}

func (x *DeleteOrderRequest) Reset() {
	*x = DeleteOrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pos_pos_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOrderRequest) ProtoMessage() {}

func (x *DeleteOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pos_pos_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOrderRequest.ProtoReflect.Descriptor instead.
func (*DeleteOrderRequest) Descriptor() ([]byte, []int) {
	return file_pos_pos_service_proto_rawDescGZIP(), []int{9}
}

func (x *DeleteOrderRequest) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

type GetProductsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Products []*Product `protobuf:"bytes,1,rep,name=products,proto3" json:"products,omitempty"`
}

func (x *GetProductsResponse) Reset() {
	*x = GetProductsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pos_pos_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProductsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProductsResponse) ProtoMessage() {}

func (x *GetProductsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pos_pos_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProductsResponse.ProtoReflect.Descriptor instead.
func (*GetProductsResponse) Descriptor() ([]byte, []int) {
	return file_pos_pos_service_proto_rawDescGZIP(), []int{10}
}

func (x *GetProductsResponse) GetProducts() []*Product {
	if x != nil {
		return x.Products
	}
	return nil
}

type GetProductCategoriesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductCategories []*ProductCategory `protobuf:"bytes,1,rep,name=product_categories,json=productCategories,proto3" json:"product_categories,omitempty"`
}

func (x *GetProductCategoriesResponse) Reset() {
	*x = GetProductCategoriesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pos_pos_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProductCategoriesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProductCategoriesResponse) ProtoMessage() {}

func (x *GetProductCategoriesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pos_pos_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProductCategoriesResponse.ProtoReflect.Descriptor instead.
func (*GetProductCategoriesResponse) Descriptor() ([]byte, []int) {
	return file_pos_pos_service_proto_rawDescGZIP(), []int{11}
}

func (x *GetProductCategoriesResponse) GetProductCategories() []*ProductCategory {
	if x != nil {
		return x.ProductCategories
	}
	return nil
}

type PostProductCategoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *PostProductCategoryRequest) Reset() {
	*x = PostProductCategoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pos_pos_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostProductCategoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostProductCategoryRequest) ProtoMessage() {}

func (x *PostProductCategoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pos_pos_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostProductCategoryRequest.ProtoReflect.Descriptor instead.
func (*PostProductCategoryRequest) Descriptor() ([]byte, []int) {
	return file_pos_pos_service_proto_rawDescGZIP(), []int{12}
}

func (x *PostProductCategoryRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type PostProductRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Product *ProductParam `protobuf:"bytes,1,opt,name=product,proto3" json:"product,omitempty"`
}

func (x *PostProductRequest) Reset() {
	*x = PostProductRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pos_pos_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostProductRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostProductRequest) ProtoMessage() {}

func (x *PostProductRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pos_pos_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostProductRequest.ProtoReflect.Descriptor instead.
func (*PostProductRequest) Descriptor() ([]byte, []int) {
	return file_pos_pos_service_proto_rawDescGZIP(), []int{13}
}

func (x *PostProductRequest) GetProduct() *ProductParam {
	if x != nil {
		return x.Product
	}
	return nil
}

type UpdateProductRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductId string        `protobuf:"bytes,1,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	Product   *ProductParam `protobuf:"bytes,2,opt,name=product,proto3" json:"product,omitempty"`
}

func (x *UpdateProductRequest) Reset() {
	*x = UpdateProductRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pos_pos_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateProductRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProductRequest) ProtoMessage() {}

func (x *UpdateProductRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pos_pos_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProductRequest.ProtoReflect.Descriptor instead.
func (*UpdateProductRequest) Descriptor() ([]byte, []int) {
	return file_pos_pos_service_proto_rawDescGZIP(), []int{14}
}

func (x *UpdateProductRequest) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

func (x *UpdateProductRequest) GetProduct() *ProductParam {
	if x != nil {
		return x.Product
	}
	return nil
}

type DeleteProductRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductId string `protobuf:"bytes,1,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
}

func (x *DeleteProductRequest) Reset() {
	*x = DeleteProductRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pos_pos_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteProductRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteProductRequest) ProtoMessage() {}

func (x *DeleteProductRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pos_pos_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteProductRequest.ProtoReflect.Descriptor instead.
func (*DeleteProductRequest) Descriptor() ([]byte, []int) {
	return file_pos_pos_service_proto_rawDescGZIP(), []int{15}
}

func (x *DeleteProductRequest) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

type PostStockRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Quantity uint32 `protobuf:"varint,2,opt,name=quantity,proto3" json:"quantity,omitempty"`
}

func (x *PostStockRequest) Reset() {
	*x = PostStockRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pos_pos_service_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostStockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostStockRequest) ProtoMessage() {}

func (x *PostStockRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pos_pos_service_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostStockRequest.ProtoReflect.Descriptor instead.
func (*PostStockRequest) Descriptor() ([]byte, []int) {
	return file_pos_pos_service_proto_rawDescGZIP(), []int{16}
}

func (x *PostStockRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PostStockRequest) GetQuantity() uint32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

type GetStocksResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Stocks []*Stock `protobuf:"bytes,1,rep,name=stocks,proto3" json:"stocks,omitempty"`
}

func (x *GetStocksResponse) Reset() {
	*x = GetStocksResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pos_pos_service_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStocksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStocksResponse) ProtoMessage() {}

func (x *GetStocksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pos_pos_service_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStocksResponse.ProtoReflect.Descriptor instead.
func (*GetStocksResponse) Descriptor() ([]byte, []int) {
	return file_pos_pos_service_proto_rawDescGZIP(), []int{17}
}

func (x *GetStocksResponse) GetStocks() []*Stock {
	if x != nil {
		return x.Stocks
	}
	return nil
}

type PostCoffeeBeanRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name         string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	GramQuantity int32  `protobuf:"varint,2,opt,name=gram_quantity,json=gramQuantity,proto3" json:"gram_quantity,omitempty"`
}

func (x *PostCoffeeBeanRequest) Reset() {
	*x = PostCoffeeBeanRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pos_pos_service_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostCoffeeBeanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostCoffeeBeanRequest) ProtoMessage() {}

func (x *PostCoffeeBeanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pos_pos_service_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostCoffeeBeanRequest.ProtoReflect.Descriptor instead.
func (*PostCoffeeBeanRequest) Descriptor() ([]byte, []int) {
	return file_pos_pos_service_proto_rawDescGZIP(), []int{18}
}

func (x *PostCoffeeBeanRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PostCoffeeBeanRequest) GetGramQuantity() int32 {
	if x != nil {
		return x.GramQuantity
	}
	return 0
}

type GetCoffeeBeansResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CoffeeBeans []*CoffeeBean `protobuf:"bytes,1,rep,name=coffee_beans,json=coffeeBeans,proto3" json:"coffee_beans,omitempty"`
}

func (x *GetCoffeeBeansResponse) Reset() {
	*x = GetCoffeeBeansResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pos_pos_service_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCoffeeBeansResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCoffeeBeansResponse) ProtoMessage() {}

func (x *GetCoffeeBeansResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pos_pos_service_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCoffeeBeansResponse.ProtoReflect.Descriptor instead.
func (*GetCoffeeBeansResponse) Descriptor() ([]byte, []int) {
	return file_pos_pos_service_proto_rawDescGZIP(), []int{19}
}

func (x *GetCoffeeBeansResponse) GetCoffeeBeans() []*CoffeeBean {
	if x != nil {
		return x.CoffeeBeans
	}
	return nil
}

type PostSeatRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *PostSeatRequest) Reset() {
	*x = PostSeatRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pos_pos_service_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostSeatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostSeatRequest) ProtoMessage() {}

func (x *PostSeatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pos_pos_service_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostSeatRequest.ProtoReflect.Descriptor instead.
func (*PostSeatRequest) Descriptor() ([]byte, []int) {
	return file_pos_pos_service_proto_rawDescGZIP(), []int{20}
}

func (x *PostSeatRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type UpdateSeatRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Seat *Seat `protobuf:"bytes,1,opt,name=seat,proto3" json:"seat,omitempty"`
}

func (x *UpdateSeatRequest) Reset() {
	*x = UpdateSeatRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pos_pos_service_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSeatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSeatRequest) ProtoMessage() {}

func (x *UpdateSeatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pos_pos_service_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSeatRequest.ProtoReflect.Descriptor instead.
func (*UpdateSeatRequest) Descriptor() ([]byte, []int) {
	return file_pos_pos_service_proto_rawDescGZIP(), []int{21}
}

func (x *UpdateSeatRequest) GetSeat() *Seat {
	if x != nil {
		return x.Seat
	}
	return nil
}

type GetSeatsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Seats []*Seat `protobuf:"bytes,1,rep,name=seats,proto3" json:"seats,omitempty"`
}

func (x *GetSeatsResponse) Reset() {
	*x = GetSeatsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pos_pos_service_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSeatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSeatsResponse) ProtoMessage() {}

func (x *GetSeatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pos_pos_service_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSeatsResponse.ProtoReflect.Descriptor instead.
func (*GetSeatsResponse) Descriptor() ([]byte, []int) {
	return file_pos_pos_service_proto_rawDescGZIP(), []int{22}
}

func (x *GetSeatsResponse) GetSeats() []*Seat {
	if x != nil {
		return x.Seats
	}
	return nil
}

type PostNewClientRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *PostNewClientRequest) Reset() {
	*x = PostNewClientRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pos_pos_service_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostNewClientRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostNewClientRequest) ProtoMessage() {}

func (x *PostNewClientRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pos_pos_service_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostNewClientRequest.ProtoReflect.Descriptor instead.
func (*PostNewClientRequest) Descriptor() ([]byte, []int) {
	return file_pos_pos_service_proto_rawDescGZIP(), []int{23}
}

func (x *PostNewClientRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type PostNewClientResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *PostNewClientResponse) Reset() {
	*x = PostNewClientResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pos_pos_service_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostNewClientResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostNewClientResponse) ProtoMessage() {}

func (x *PostNewClientResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pos_pos_service_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostNewClientResponse.ProtoReflect.Descriptor instead.
func (*PostNewClientResponse) Descriptor() ([]byte, []int) {
	return file_pos_pos_service_proto_rawDescGZIP(), []int{24}
}

func (x *PostNewClientResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PostNewClientResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type UpdateClientRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *UpdateClientRequest) Reset() {
	*x = UpdateClientRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pos_pos_service_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateClientRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateClientRequest) ProtoMessage() {}

func (x *UpdateClientRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pos_pos_service_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateClientRequest.ProtoReflect.Descriptor instead.
func (*UpdateClientRequest) Descriptor() ([]byte, []int) {
	return file_pos_pos_service_proto_rawDescGZIP(), []int{25}
}

func (x *UpdateClientRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateClientRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetDiscountsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Discounts []*Discount `protobuf:"bytes,1,rep,name=discounts,proto3" json:"discounts,omitempty"`
}

func (x *GetDiscountsResponse) Reset() {
	*x = GetDiscountsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pos_pos_service_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDiscountsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDiscountsResponse) ProtoMessage() {}

func (x *GetDiscountsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pos_pos_service_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDiscountsResponse.ProtoReflect.Descriptor instead.
func (*GetDiscountsResponse) Descriptor() ([]byte, []int) {
	return file_pos_pos_service_proto_rawDescGZIP(), []int{26}
}

func (x *GetDiscountsResponse) GetDiscounts() []*Discount {
	if x != nil {
		return x.Discounts
	}
	return nil
}

type PostDiscountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name          string       `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type          DiscountType `protobuf:"varint,2,opt,name=type,proto3,enum=cafelogos.pos.DiscountType" json:"type,omitempty"`
	DiscountPrice uint64       `protobuf:"varint,3,opt,name=discount_price,json=discountPrice,proto3" json:"discount_price,omitempty"`
}

func (x *PostDiscountRequest) Reset() {
	*x = PostDiscountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pos_pos_service_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostDiscountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostDiscountRequest) ProtoMessage() {}

func (x *PostDiscountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pos_pos_service_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostDiscountRequest.ProtoReflect.Descriptor instead.
func (*PostDiscountRequest) Descriptor() ([]byte, []int) {
	return file_pos_pos_service_proto_rawDescGZIP(), []int{27}
}

func (x *PostDiscountRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PostDiscountRequest) GetType() DiscountType {
	if x != nil {
		return x.Type
	}
	return DiscountType_PRICE
}

func (x *PostDiscountRequest) GetDiscountPrice() uint64 {
	if x != nil {
		return x.DiscountPrice
	}
	return 0
}

// * Product
type Product struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductId       string           `protobuf:"bytes,1,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	ProductName     string           `protobuf:"bytes,2,opt,name=product_name,json=productName,proto3" json:"product_name,omitempty"`
	ProductCategory *ProductCategory `protobuf:"bytes,3,opt,name=product_category,json=productCategory,proto3" json:"product_category,omitempty"`
	ProductType     ProductType      `protobuf:"varint,4,opt,name=product_type,json=productType,proto3,enum=cafelogos.pos.ProductType" json:"product_type,omitempty"`
	ProductColor    string           `protobuf:"bytes,5,opt,name=product_color,json=productColor,proto3" json:"product_color,omitempty"`
	IsNowSales      bool             `protobuf:"varint,6,opt,name=is_now_sales,json=isNowSales,proto3" json:"is_now_sales,omitempty"`
	CreatedAt       string           `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt       string           `protobuf:"bytes,8,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	// Only Coffee
	CoffeeBean  *CoffeeBean   `protobuf:"bytes,9,opt,name=coffee_bean,json=coffeeBean,proto3" json:"coffee_bean,omitempty"`
	CoffeeBrews []*CoffeeBrew `protobuf:"bytes,10,rep,name=coffee_brews,json=coffeeBrews,proto3" json:"coffee_brews,omitempty"`
	// Only Other
	Amount uint64 `protobuf:"varint,11,opt,name=amount,proto3" json:"amount,omitempty"`
	Stock  *Stock `protobuf:"bytes,12,opt,name=stock,proto3" json:"stock,omitempty"`
}

func (x *Product) Reset() {
	*x = Product{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pos_pos_service_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Product) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Product) ProtoMessage() {}

func (x *Product) ProtoReflect() protoreflect.Message {
	mi := &file_pos_pos_service_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Product.ProtoReflect.Descriptor instead.
func (*Product) Descriptor() ([]byte, []int) {
	return file_pos_pos_service_proto_rawDescGZIP(), []int{28}
}

func (x *Product) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

func (x *Product) GetProductName() string {
	if x != nil {
		return x.ProductName
	}
	return ""
}

func (x *Product) GetProductCategory() *ProductCategory {
	if x != nil {
		return x.ProductCategory
	}
	return nil
}

func (x *Product) GetProductType() ProductType {
	if x != nil {
		return x.ProductType
	}
	return ProductType_COFFEE
}

func (x *Product) GetProductColor() string {
	if x != nil {
		return x.ProductColor
	}
	return ""
}

func (x *Product) GetIsNowSales() bool {
	if x != nil {
		return x.IsNowSales
	}
	return false
}

func (x *Product) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *Product) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *Product) GetCoffeeBean() *CoffeeBean {
	if x != nil {
		return x.CoffeeBean
	}
	return nil
}

func (x *Product) GetCoffeeBrews() []*CoffeeBrew {
	if x != nil {
		return x.CoffeeBrews
	}
	return nil
}

func (x *Product) GetAmount() uint64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *Product) GetStock() *Stock {
	if x != nil {
		return x.Stock
	}
	return nil
}

type ProductParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductName       string      `protobuf:"bytes,1,opt,name=product_name,json=productName,proto3" json:"product_name,omitempty"`
	ProductCategoryId string      `protobuf:"bytes,2,opt,name=product_category_id,json=productCategoryId,proto3" json:"product_category_id,omitempty"`
	ProductType       ProductType `protobuf:"varint,3,opt,name=product_type,json=productType,proto3,enum=cafelogos.pos.ProductType" json:"product_type,omitempty"`
	IsNowSales        bool        `protobuf:"varint,4,opt,name=is_now_sales,json=isNowSales,proto3" json:"is_now_sales,omitempty"`
	ProductColor      string      `protobuf:"bytes,5,opt,name=product_color,json=productColor,proto3" json:"product_color,omitempty"`
	// Only Coffee
	CoffeeBeanId string        `protobuf:"bytes,6,opt,name=coffee_bean_id,json=coffeeBeanId,proto3" json:"coffee_bean_id,omitempty"`
	CoffeeBrews  []*CoffeeBrew `protobuf:"bytes,7,rep,name=coffee_brews,json=coffeeBrews,proto3" json:"coffee_brews,omitempty"`
	// Only Other
	Amount  uint64 `protobuf:"varint,8,opt,name=amount,proto3" json:"amount,omitempty"`
	StockId string `protobuf:"bytes,9,opt,name=stock_id,json=stockId,proto3" json:"stock_id,omitempty"`
}

func (x *ProductParam) Reset() {
	*x = ProductParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pos_pos_service_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductParam) ProtoMessage() {}

func (x *ProductParam) ProtoReflect() protoreflect.Message {
	mi := &file_pos_pos_service_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductParam.ProtoReflect.Descriptor instead.
func (*ProductParam) Descriptor() ([]byte, []int) {
	return file_pos_pos_service_proto_rawDescGZIP(), []int{29}
}

func (x *ProductParam) GetProductName() string {
	if x != nil {
		return x.ProductName
	}
	return ""
}

func (x *ProductParam) GetProductCategoryId() string {
	if x != nil {
		return x.ProductCategoryId
	}
	return ""
}

func (x *ProductParam) GetProductType() ProductType {
	if x != nil {
		return x.ProductType
	}
	return ProductType_COFFEE
}

func (x *ProductParam) GetIsNowSales() bool {
	if x != nil {
		return x.IsNowSales
	}
	return false
}

func (x *ProductParam) GetProductColor() string {
	if x != nil {
		return x.ProductColor
	}
	return ""
}

func (x *ProductParam) GetCoffeeBeanId() string {
	if x != nil {
		return x.CoffeeBeanId
	}
	return ""
}

func (x *ProductParam) GetCoffeeBrews() []*CoffeeBrew {
	if x != nil {
		return x.CoffeeBrews
	}
	return nil
}

func (x *ProductParam) GetAmount() uint64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *ProductParam) GetStockId() string {
	if x != nil {
		return x.StockId
	}
	return ""
}

type ProductCategory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	CreatedAt string `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt string `protobuf:"bytes,4,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *ProductCategory) Reset() {
	*x = ProductCategory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pos_pos_service_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductCategory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductCategory) ProtoMessage() {}

func (x *ProductCategory) ProtoReflect() protoreflect.Message {
	mi := &file_pos_pos_service_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductCategory.ProtoReflect.Descriptor instead.
func (*ProductCategory) Descriptor() ([]byte, []int) {
	return file_pos_pos_service_proto_rawDescGZIP(), []int{30}
}

func (x *ProductCategory) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ProductCategory) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ProductCategory) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *ProductCategory) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type CoffeeBean struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name         string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	GramQuantity int32  `protobuf:"varint,3,opt,name=gram_quantity,json=gramQuantity,proto3" json:"gram_quantity,omitempty"`
	CreatedAt    string `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt    string `protobuf:"bytes,5,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *CoffeeBean) Reset() {
	*x = CoffeeBean{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pos_pos_service_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoffeeBean) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoffeeBean) ProtoMessage() {}

func (x *CoffeeBean) ProtoReflect() protoreflect.Message {
	mi := &file_pos_pos_service_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoffeeBean.ProtoReflect.Descriptor instead.
func (*CoffeeBean) Descriptor() ([]byte, []int) {
	return file_pos_pos_service_proto_rawDescGZIP(), []int{31}
}

func (x *CoffeeBean) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CoffeeBean) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CoffeeBean) GetGramQuantity() int32 {
	if x != nil {
		return x.GramQuantity
	}
	return 0
}

func (x *CoffeeBean) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *CoffeeBean) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type CoffeeBrew struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name              string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	BeanQuantityGrams uint32 `protobuf:"varint,3,opt,name=bean_quantity_grams,json=beanQuantityGrams,proto3" json:"bean_quantity_grams,omitempty"`
	Amount            uint64 `protobuf:"varint,4,opt,name=amount,proto3" json:"amount,omitempty"`
	CreatedAt         string `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt         string `protobuf:"bytes,6,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *CoffeeBrew) Reset() {
	*x = CoffeeBrew{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pos_pos_service_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoffeeBrew) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoffeeBrew) ProtoMessage() {}

func (x *CoffeeBrew) ProtoReflect() protoreflect.Message {
	mi := &file_pos_pos_service_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoffeeBrew.ProtoReflect.Descriptor instead.
func (*CoffeeBrew) Descriptor() ([]byte, []int) {
	return file_pos_pos_service_proto_rawDescGZIP(), []int{32}
}

func (x *CoffeeBrew) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CoffeeBrew) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CoffeeBrew) GetBeanQuantityGrams() uint32 {
	if x != nil {
		return x.BeanQuantityGrams
	}
	return 0
}

func (x *CoffeeBrew) GetAmount() uint64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *CoffeeBrew) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *CoffeeBrew) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type Stock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Quantity  uint32 `protobuf:"varint,3,opt,name=quantity,proto3" json:"quantity,omitempty"`
	CreatedAt string `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt string `protobuf:"bytes,5,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *Stock) Reset() {
	*x = Stock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pos_pos_service_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Stock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Stock) ProtoMessage() {}

func (x *Stock) ProtoReflect() protoreflect.Message {
	mi := &file_pos_pos_service_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Stock.ProtoReflect.Descriptor instead.
func (*Stock) Descriptor() ([]byte, []int) {
	return file_pos_pos_service_proto_rawDescGZIP(), []int{33}
}

func (x *Stock) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Stock) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Stock) GetQuantity() uint32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *Stock) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *Stock) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type Order struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string           `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Items      []*OrderItem     `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
	Discounts  []*OrderDiscount `protobuf:"bytes,3,rep,name=discounts,proto3" json:"discounts,omitempty"`
	OrderType  OrderType        `protobuf:"varint,4,opt,name=order_type,json=orderType,proto3,enum=cafelogos.pos.OrderType" json:"order_type,omitempty"`
	OrderAt    string           `protobuf:"bytes,5,opt,name=order_at,json=orderAt,proto3" json:"order_at,omitempty"`
	CallNumber string           `protobuf:"bytes,6,opt,name=call_number,json=callNumber,proto3" json:"call_number,omitempty"`
	ClientId   string           `protobuf:"bytes,7,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	SeatName   string           `protobuf:"bytes,8,opt,name=seat_name,json=seatName,proto3" json:"seat_name,omitempty"`
}

func (x *Order) Reset() {
	*x = Order{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pos_pos_service_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Order) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Order) ProtoMessage() {}

func (x *Order) ProtoReflect() protoreflect.Message {
	mi := &file_pos_pos_service_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Order.ProtoReflect.Descriptor instead.
func (*Order) Descriptor() ([]byte, []int) {
	return file_pos_pos_service_proto_rawDescGZIP(), []int{34}
}

func (x *Order) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Order) GetItems() []*OrderItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *Order) GetDiscounts() []*OrderDiscount {
	if x != nil {
		return x.Discounts
	}
	return nil
}

func (x *Order) GetOrderType() OrderType {
	if x != nil {
		return x.OrderType
	}
	return OrderType_EatIn
}

func (x *Order) GetOrderAt() string {
	if x != nil {
		return x.OrderAt
	}
	return ""
}

func (x *Order) GetCallNumber() string {
	if x != nil {
		return x.CallNumber
	}
	return ""
}

func (x *Order) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *Order) GetSeatName() string {
	if x != nil {
		return x.SeatName
	}
	return ""
}

type OrderParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string           `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` //* 代入した場合は代入したIDが使用され、しなかったら生成される
	Items     []*OrderItem     `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
	Discounts []*OrderDiscount `protobuf:"bytes,3,rep,name=discounts,proto3" json:"discounts,omitempty"`
	OrderType OrderType        `protobuf:"varint,4,opt,name=order_type,json=orderType,proto3,enum=cafelogos.pos.OrderType" json:"order_type,omitempty"`
	OrderAt   string           `protobuf:"bytes,5,opt,name=order_at,json=orderAt,proto3" json:"order_at,omitempty"`
	ClientId  string           `protobuf:"bytes,6,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	SeatId    string           `protobuf:"bytes,7,opt,name=seat_id,json=seatId,proto3" json:"seat_id,omitempty"`
}

func (x *OrderParam) Reset() {
	*x = OrderParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pos_pos_service_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderParam) ProtoMessage() {}

func (x *OrderParam) ProtoReflect() protoreflect.Message {
	mi := &file_pos_pos_service_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderParam.ProtoReflect.Descriptor instead.
func (*OrderParam) Descriptor() ([]byte, []int) {
	return file_pos_pos_service_proto_rawDescGZIP(), []int{35}
}

func (x *OrderParam) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *OrderParam) GetItems() []*OrderItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *OrderParam) GetDiscounts() []*OrderDiscount {
	if x != nil {
		return x.Discounts
	}
	return nil
}

func (x *OrderParam) GetOrderType() OrderType {
	if x != nil {
		return x.OrderType
	}
	return OrderType_EatIn
}

func (x *OrderParam) GetOrderAt() string {
	if x != nil {
		return x.OrderAt
	}
	return ""
}

func (x *OrderParam) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *OrderParam) GetSeatId() string {
	if x != nil {
		return x.SeatId
	}
	return ""
}

type OrderItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductId    string `protobuf:"bytes,1,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	Quantity     uint32 `protobuf:"varint,2,opt,name=quantity,proto3" json:"quantity,omitempty"`
	Amount       uint64 `protobuf:"varint,3,opt,name=amount,proto3" json:"amount,omitempty"`
	CoffeeBrewId string `protobuf:"bytes,4,opt,name=coffee_brew_id,json=coffeeBrewId,proto3" json:"coffee_brew_id,omitempty"`
}

func (x *OrderItem) Reset() {
	*x = OrderItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pos_pos_service_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderItem) ProtoMessage() {}

func (x *OrderItem) ProtoReflect() protoreflect.Message {
	mi := &file_pos_pos_service_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderItem.ProtoReflect.Descriptor instead.
func (*OrderItem) Descriptor() ([]byte, []int) {
	return file_pos_pos_service_proto_rawDescGZIP(), []int{36}
}

func (x *OrderItem) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

func (x *OrderItem) GetQuantity() uint32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *OrderItem) GetAmount() uint64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *OrderItem) GetCoffeeBrewId() string {
	if x != nil {
		return x.CoffeeBrewId
	}
	return ""
}

type OrderDiscount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string       `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` //* 一旦何も入ってない
	DiscountId    string       `protobuf:"bytes,2,opt,name=discount_id,json=discountId,proto3" json:"discount_id,omitempty"`
	Type          DiscountType `protobuf:"varint,3,opt,name=type,proto3,enum=cafelogos.pos.DiscountType" json:"type,omitempty"`
	DiscountPrice uint64       `protobuf:"varint,4,opt,name=discount_price,json=discountPrice,proto3" json:"discount_price,omitempty"`
}

func (x *OrderDiscount) Reset() {
	*x = OrderDiscount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pos_pos_service_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderDiscount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderDiscount) ProtoMessage() {}

func (x *OrderDiscount) ProtoReflect() protoreflect.Message {
	mi := &file_pos_pos_service_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderDiscount.ProtoReflect.Descriptor instead.
func (*OrderDiscount) Descriptor() ([]byte, []int) {
	return file_pos_pos_service_proto_rawDescGZIP(), []int{37}
}

func (x *OrderDiscount) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *OrderDiscount) GetDiscountId() string {
	if x != nil {
		return x.DiscountId
	}
	return ""
}

func (x *OrderDiscount) GetType() DiscountType {
	if x != nil {
		return x.Type
	}
	return DiscountType_PRICE
}

func (x *OrderDiscount) GetDiscountPrice() uint64 {
	if x != nil {
		return x.DiscountPrice
	}
	return 0
}

type Discount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string       `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string       `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Type          DiscountType `protobuf:"varint,3,opt,name=type,proto3,enum=cafelogos.pos.DiscountType" json:"type,omitempty"`
	DiscountPrice uint64       `protobuf:"varint,4,opt,name=discount_price,json=discountPrice,proto3" json:"discount_price,omitempty"`
}

func (x *Discount) Reset() {
	*x = Discount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pos_pos_service_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Discount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Discount) ProtoMessage() {}

func (x *Discount) ProtoReflect() protoreflect.Message {
	mi := &file_pos_pos_service_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Discount.ProtoReflect.Descriptor instead.
func (*Discount) Descriptor() ([]byte, []int) {
	return file_pos_pos_service_proto_rawDescGZIP(), []int{38}
}

func (x *Discount) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Discount) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Discount) GetType() DiscountType {
	if x != nil {
		return x.Type
	}
	return DiscountType_PRICE
}

func (x *Discount) GetDiscountPrice() uint64 {
	if x != nil {
		return x.DiscountPrice
	}
	return 0
}

type Payment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string              `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Type          Payment_PaymentType `protobuf:"varint,2,opt,name=type,proto3,enum=cafelogos.pos.Payment_PaymentType" json:"type,omitempty"`
	ReceiveAmount uint64              `protobuf:"varint,3,opt,name=receive_amount,json=receiveAmount,proto3" json:"receive_amount,omitempty"`
	PaymentAmount uint64              `protobuf:"varint,4,opt,name=payment_amount,json=paymentAmount,proto3" json:"payment_amount,omitempty"`
	ChangeAmount  uint64              `protobuf:"varint,5,opt,name=change_amount,json=changeAmount,proto3" json:"change_amount,omitempty"`
	PaymentAt     string              `protobuf:"bytes,6,opt,name=payment_at,json=paymentAt,proto3" json:"payment_at,omitempty"`
	UpdatedAt     string              `protobuf:"bytes,7,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	PostOrders    []*OrderParam       `protobuf:"bytes,8,rep,name=post_orders,json=postOrders,proto3" json:"post_orders,omitempty"`
	OrderIds      []string            `protobuf:"bytes,9,rep,name=order_ids,json=orderIds,proto3" json:"order_ids,omitempty"`
}

func (x *Payment) Reset() {
	*x = Payment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pos_pos_service_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Payment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Payment) ProtoMessage() {}

func (x *Payment) ProtoReflect() protoreflect.Message {
	mi := &file_pos_pos_service_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Payment.ProtoReflect.Descriptor instead.
func (*Payment) Descriptor() ([]byte, []int) {
	return file_pos_pos_service_proto_rawDescGZIP(), []int{39}
}

func (x *Payment) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Payment) GetType() Payment_PaymentType {
	if x != nil {
		return x.Type
	}
	return Payment_CASH
}

func (x *Payment) GetReceiveAmount() uint64 {
	if x != nil {
		return x.ReceiveAmount
	}
	return 0
}

func (x *Payment) GetPaymentAmount() uint64 {
	if x != nil {
		return x.PaymentAmount
	}
	return 0
}

func (x *Payment) GetChangeAmount() uint64 {
	if x != nil {
		return x.ChangeAmount
	}
	return 0
}

func (x *Payment) GetPaymentAt() string {
	if x != nil {
		return x.PaymentAt
	}
	return ""
}

func (x *Payment) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *Payment) GetPostOrders() []*OrderParam {
	if x != nil {
		return x.PostOrders
	}
	return nil
}

func (x *Payment) GetOrderIds() []string {
	if x != nil {
		return x.OrderIds
	}
	return nil
}

type Seat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Seat) Reset() {
	*x = Seat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pos_pos_service_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Seat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Seat) ProtoMessage() {}

func (x *Seat) ProtoReflect() protoreflect.Message {
	mi := &file_pos_pos_service_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Seat.ProtoReflect.Descriptor instead.
func (*Seat) Descriptor() ([]byte, []int) {
	return file_pos_pos_service_proto_rawDescGZIP(), []int{40}
}

func (x *Seat) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Seat) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

var File_pos_pos_service_proto protoreflect.FileDescriptor

var file_pos_pos_service_proto_rawDesc = []byte{
	0x0a, 0x15, 0x70, 0x6f, 0x73, 0x2f, 0x70, 0x6f, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x63, 0x61, 0x66, 0x65, 0x6c, 0x6f, 0x67,
	0x6f, 0x73, 0x2e, 0x70, 0x6f, 0x73, 0x1a, 0x13, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x12, 0x0a, 0x10, 0x47,
	0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0x41, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x06, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x61, 0x66, 0x65, 0x6c, 0x6f, 0x67, 0x6f, 0x73,
	0x2e, 0x70, 0x6f, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x06, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x73, 0x22, 0x3e, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x61, 0x66, 0x65, 0x6c, 0x6f, 0x67, 0x6f,
	0x73, 0x2e, 0x70, 0x6f, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x05, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x22, 0x39, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x55, 0x6e, 0x70, 0x61, 0x69, 0x64, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x73, 0x42, 0x79, 0x53, 0x65, 0x61, 0x74, 0x49, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x65, 0x61, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x61, 0x74, 0x49, 0x64, 0x22, 0x43, 0x0a,
	0x10, 0x50, 0x6f, 0x73, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x2f, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x63, 0x61, 0x66, 0x65, 0x6c, 0x6f, 0x67, 0x6f, 0x73, 0x2e, 0x70, 0x6f, 0x73,
	0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x05, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x22, 0xdb, 0x01, 0x0a, 0x11, 0x50, 0x6f, 0x73, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x25, 0x2e, 0x63, 0x61, 0x66, 0x65, 0x6c, 0x6f, 0x67,
	0x6f, 0x73, 0x2e, 0x70, 0x6f, 0x73, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x6c, 0x6c,
	0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63,
	0x61, 0x6c, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x45, 0x0a, 0x04, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x06, 0x0a, 0x02, 0x4f, 0x4b, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x4f, 0x4c,
	0x44, 0x5f, 0x4f, 0x55, 0x54, 0x5f, 0x50, 0x52, 0x4f, 0x44, 0x55, 0x43, 0x54, 0x10, 0x01, 0x12,
	0x14, 0x0a, 0x10, 0x4e, 0x4f, 0x54, 0x5f, 0x53, 0x4f, 0x4c, 0x44, 0x5f, 0x50, 0x52, 0x4f, 0x44,
	0x55, 0x43, 0x54, 0x10, 0x02, 0x12, 0x09, 0x0a, 0x05, 0x4f, 0x54, 0x48, 0x45, 0x52, 0x10, 0x03,
	0x22, 0x46, 0x0a, 0x12, 0x50, 0x6f, 0x73, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x61, 0x66, 0x65, 0x6c, 0x6f,
	0x67, 0x6f, 0x73, 0x2e, 0x70, 0x6f, 0x73, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x07, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x48, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x30, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x63, 0x61, 0x66, 0x65, 0x6c, 0x6f, 0x67, 0x6f, 0x73, 0x2e, 0x70, 0x6f,
	0x73, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x22, 0xa3, 0x01, 0x0a, 0x0f, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x13, 0x0a, 0x05, 0x69, 0x73, 0x5f, 0x6f, 0x6b, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x69, 0x73, 0x4f, 0x6b, 0x12, 0x30, 0x0a, 0x07, 0x70,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63,
	0x61, 0x66, 0x65, 0x6c, 0x6f, 0x67, 0x6f, 0x73, 0x2e, 0x70, 0x6f, 0x73, 0x2e, 0x50, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x49, 0x0a,
	0x0f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63, 0x61, 0x66, 0x65, 0x6c, 0x6f, 0x67,
	0x6f, 0x73, 0x2e, 0x70, 0x6f, 0x73, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x22, 0x2f, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19,
	0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x22, 0x49, 0x0a, 0x13, 0x47, 0x65, 0x74,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x32, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x61, 0x66, 0x65, 0x6c, 0x6f, 0x67, 0x6f, 0x73, 0x2e, 0x70,
	0x6f, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x73, 0x22, 0x6d, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x12, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x63, 0x61, 0x66, 0x65, 0x6c, 0x6f, 0x67, 0x6f, 0x73, 0x2e, 0x70, 0x6f, 0x73,
	0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x52, 0x11, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x69, 0x65, 0x73, 0x22, 0x30, 0x0a, 0x1a, 0x50, 0x6f, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x4b, 0x0a, 0x12, 0x50, 0x6f, 0x73, 0x74, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x35, 0x0a, 0x07, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63,
	0x61, 0x66, 0x65, 0x6c, 0x6f, 0x67, 0x6f, 0x73, 0x2e, 0x70, 0x6f, 0x73, 0x2e, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x22, 0x6c, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x35, 0x0a, 0x07, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63, 0x61, 0x66,
	0x65, 0x6c, 0x6f, 0x67, 0x6f, 0x73, 0x2e, 0x70, 0x6f, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x22, 0x35, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x22, 0x42, 0x0a, 0x10, 0x50, 0x6f, 0x73, 0x74, 0x53,
	0x74, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0x41, 0x0a, 0x11, 0x47,
	0x65, 0x74, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x2c, 0x0a, 0x06, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x63, 0x61, 0x66, 0x65, 0x6c, 0x6f, 0x67, 0x6f, 0x73, 0x2e, 0x70, 0x6f, 0x73,
	0x2e, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x52, 0x06, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x73, 0x22, 0x50,
	0x0a, 0x15, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x66, 0x66, 0x65, 0x65, 0x42, 0x65, 0x61, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x67,
	0x72, 0x61, 0x6d, 0x5f, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0c, 0x67, 0x72, 0x61, 0x6d, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x22, 0x56, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x66, 0x66, 0x65, 0x65, 0x42, 0x65, 0x61,
	0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x0c, 0x63, 0x6f,
	0x66, 0x66, 0x65, 0x65, 0x5f, 0x62, 0x65, 0x61, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x63, 0x61, 0x66, 0x65, 0x6c, 0x6f, 0x67, 0x6f, 0x73, 0x2e, 0x70, 0x6f, 0x73,
	0x2e, 0x43, 0x6f, 0x66, 0x66, 0x65, 0x65, 0x42, 0x65, 0x61, 0x6e, 0x52, 0x0b, 0x63, 0x6f, 0x66,
	0x66, 0x65, 0x65, 0x42, 0x65, 0x61, 0x6e, 0x73, 0x22, 0x25, 0x0a, 0x0f, 0x50, 0x6f, 0x73, 0x74,
	0x53, 0x65, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22,
	0x3c, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x61, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x04, 0x73, 0x65, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63, 0x61, 0x66, 0x65, 0x6c, 0x6f, 0x67, 0x6f, 0x73, 0x2e, 0x70,
	0x6f, 0x73, 0x2e, 0x53, 0x65, 0x61, 0x74, 0x52, 0x04, 0x73, 0x65, 0x61, 0x74, 0x22, 0x3d, 0x0a,
	0x10, 0x47, 0x65, 0x74, 0x53, 0x65, 0x61, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x29, 0x0a, 0x05, 0x73, 0x65, 0x61, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x63, 0x61, 0x66, 0x65, 0x6c, 0x6f, 0x67, 0x6f, 0x73, 0x2e, 0x70, 0x6f, 0x73,
	0x2e, 0x53, 0x65, 0x61, 0x74, 0x52, 0x05, 0x73, 0x65, 0x61, 0x74, 0x73, 0x22, 0x2a, 0x0a, 0x14,
	0x50, 0x6f, 0x73, 0x74, 0x4e, 0x65, 0x77, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x3b, 0x0a, 0x15, 0x50, 0x6f, 0x73, 0x74,
	0x4e, 0x65, 0x77, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x39, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x22, 0x4d, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x09, 0x64, 0x69, 0x73, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x61,
	0x66, 0x65, 0x6c, 0x6f, 0x67, 0x6f, 0x73, 0x2e, 0x70, 0x6f, 0x73, 0x2e, 0x44, 0x69, 0x73, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x09, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x22,
	0x81, 0x01, 0x0a, 0x13, 0x50, 0x6f, 0x73, 0x74, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2f, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x63, 0x61, 0x66, 0x65,
	0x6c, 0x6f, 0x67, 0x6f, 0x73, 0x2e, 0x70, 0x6f, 0x73, 0x2e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x25, 0x0a, 0x0e,
	0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x22, 0x98, 0x04, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x21,
	0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x49, 0x0a, 0x10, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x63, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x61,
	0x66, 0x65, 0x6c, 0x6f, 0x67, 0x6f, 0x73, 0x2e, 0x70, 0x6f, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x0f, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x3d, 0x0a, 0x0c,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x63, 0x61, 0x66, 0x65, 0x6c, 0x6f, 0x67, 0x6f, 0x73, 0x2e, 0x70,
	0x6f, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72,
	0x12, 0x20, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x6e, 0x6f, 0x77, 0x5f, 0x73, 0x61, 0x6c, 0x65, 0x73,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x4e, 0x6f, 0x77, 0x53, 0x61, 0x6c,
	0x65, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x3a, 0x0a, 0x0b, 0x63, 0x6f, 0x66, 0x66, 0x65, 0x65, 0x5f, 0x62, 0x65, 0x61, 0x6e, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x61, 0x66, 0x65, 0x6c, 0x6f, 0x67, 0x6f,
	0x73, 0x2e, 0x70, 0x6f, 0x73, 0x2e, 0x43, 0x6f, 0x66, 0x66, 0x65, 0x65, 0x42, 0x65, 0x61, 0x6e,
	0x52, 0x0a, 0x63, 0x6f, 0x66, 0x66, 0x65, 0x65, 0x42, 0x65, 0x61, 0x6e, 0x12, 0x3c, 0x0a, 0x0c,
	0x63, 0x6f, 0x66, 0x66, 0x65, 0x65, 0x5f, 0x62, 0x72, 0x65, 0x77, 0x73, 0x18, 0x0a, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x61, 0x66, 0x65, 0x6c, 0x6f, 0x67, 0x6f, 0x73, 0x2e, 0x70,
	0x6f, 0x73, 0x2e, 0x43, 0x6f, 0x66, 0x66, 0x65, 0x65, 0x42, 0x72, 0x65, 0x77, 0x52, 0x0b, 0x63,
	0x6f, 0x66, 0x66, 0x65, 0x65, 0x42, 0x72, 0x65, 0x77, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x05, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x63, 0x61, 0x66, 0x65, 0x6c, 0x6f, 0x67, 0x6f, 0x73, 0x2e, 0x70, 0x6f,
	0x73, 0x2e, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x52, 0x05, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x22, 0xfe,
	0x02, 0x0a, 0x0c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12,
	0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x11, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x49, 0x64, 0x12, 0x3d, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x63, 0x61, 0x66, 0x65, 0x6c,
	0x6f, 0x67, 0x6f, 0x73, 0x2e, 0x70, 0x6f, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x20, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x6e, 0x6f, 0x77, 0x5f, 0x73, 0x61, 0x6c, 0x65,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x4e, 0x6f, 0x77, 0x53, 0x61,
	0x6c, 0x65, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x63,
	0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x24, 0x0a, 0x0e, 0x63, 0x6f, 0x66, 0x66,
	0x65, 0x65, 0x5f, 0x62, 0x65, 0x61, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x63, 0x6f, 0x66, 0x66, 0x65, 0x65, 0x42, 0x65, 0x61, 0x6e, 0x49, 0x64, 0x12, 0x3c,
	0x0a, 0x0c, 0x63, 0x6f, 0x66, 0x66, 0x65, 0x65, 0x5f, 0x62, 0x72, 0x65, 0x77, 0x73, 0x18, 0x07,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x61, 0x66, 0x65, 0x6c, 0x6f, 0x67, 0x6f, 0x73,
	0x2e, 0x70, 0x6f, 0x73, 0x2e, 0x43, 0x6f, 0x66, 0x66, 0x65, 0x65, 0x42, 0x72, 0x65, 0x77, 0x52,
	0x0b, 0x63, 0x6f, 0x66, 0x66, 0x65, 0x65, 0x42, 0x72, 0x65, 0x77, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x5f, 0x69, 0x64,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x22,
	0x73, 0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x22, 0x93, 0x01, 0x0a, 0x0a, 0x43, 0x6f, 0x66, 0x66, 0x65, 0x65, 0x42,
	0x65, 0x61, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x67, 0x72, 0x61, 0x6d, 0x5f,
	0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c,
	0x67, 0x72, 0x61, 0x6d, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x1d, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xb6, 0x01, 0x0a, 0x0a, 0x43,
	0x6f, 0x66, 0x66, 0x65, 0x65, 0x42, 0x72, 0x65, 0x77, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a,
	0x13, 0x62, 0x65, 0x61, 0x6e, 0x5f, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x67,
	0x72, 0x61, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x62, 0x65, 0x61, 0x6e,
	0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x47, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x22, 0x85, 0x01, 0x0a, 0x05, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x1d, 0x0a,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xb2, 0x02, 0x0a, 0x05,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2e, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x61, 0x66, 0x65, 0x6c, 0x6f, 0x67, 0x6f, 0x73,
	0x2e, 0x70, 0x6f, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x3a, 0x0a, 0x09, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x61, 0x66, 0x65, 0x6c,
	0x6f, 0x67, 0x6f, 0x73, 0x2e, 0x70, 0x6f, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x69,
	0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x09, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x73, 0x12, 0x37, 0x0a, 0x0a, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x63, 0x61, 0x66, 0x65, 0x6c, 0x6f, 0x67, 0x6f,
	0x73, 0x2e, 0x70, 0x6f, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x41, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x61, 0x6c, 0x6c,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x61, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x61, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x22, 0x92, 0x02, 0x0a, 0x0a, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x2e, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x63, 0x61, 0x66, 0x65, 0x6c, 0x6f, 0x67, 0x6f, 0x73, 0x2e, 0x70, 0x6f, 0x73, 0x2e, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12,
	0x3a, 0x0a, 0x09, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x61, 0x66, 0x65, 0x6c, 0x6f, 0x67, 0x6f, 0x73, 0x2e, 0x70,
	0x6f, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x09, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x37, 0x0a, 0x0a, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x18, 0x2e, 0x63, 0x61, 0x66, 0x65, 0x6c, 0x6f, 0x67, 0x6f, 0x73, 0x2e, 0x70, 0x6f, 0x73, 0x2e,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x61, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x74, 0x12,
	0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07,
	0x73, 0x65, 0x61, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x65, 0x61, 0x74, 0x49, 0x64, 0x22, 0x84, 0x01, 0x0a, 0x09, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49,
	0x74, 0x65, 0x6d, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x16,
	0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0e, 0x63, 0x6f, 0x66, 0x66, 0x65, 0x65,
	0x5f, 0x62, 0x72, 0x65, 0x77, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x63, 0x6f, 0x66, 0x66, 0x65, 0x65, 0x42, 0x72, 0x65, 0x77, 0x49, 0x64, 0x22, 0x98, 0x01, 0x0a,
	0x0d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f,
	0x0a, 0x0b, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12,
	0x2f, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e,
	0x63, 0x61, 0x66, 0x65, 0x6c, 0x6f, 0x67, 0x6f, 0x73, 0x2e, 0x70, 0x6f, 0x73, 0x2e, 0x44, 0x69,
	0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x25, 0x0a, 0x0e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x22, 0x86, 0x01, 0x0a, 0x08, 0x44, 0x69, 0x73, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2f, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x63, 0x61, 0x66, 0x65, 0x6c, 0x6f, 0x67,
	0x6f, 0x73, 0x2e, 0x70, 0x6f, 0x73, 0x2e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x69, 0x73,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0d, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x22, 0xf4, 0x02, 0x0a, 0x07, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x36, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x63, 0x61, 0x66,
	0x65, 0x6c, 0x6f, 0x67, 0x6f, 0x73, 0x2e, 0x70, 0x6f, 0x73, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x5f,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x72, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x70,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0d, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x3a, 0x0a, 0x0b, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x61, 0x66,
	0x65, 0x6c, 0x6f, 0x67, 0x6f, 0x73, 0x2e, 0x70, 0x6f, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x0a, 0x70, 0x6f, 0x73, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x73, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x09,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x73, 0x22, 0x17,
	0x0a, 0x0b, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x08, 0x0a,
	0x04, 0x43, 0x41, 0x53, 0x48, 0x10, 0x00, 0x22, 0x2a, 0x0a, 0x04, 0x53, 0x65, 0x61, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x2a, 0x24, 0x0a, 0x0b, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x43, 0x4f, 0x46, 0x46, 0x45, 0x45, 0x10, 0x00, 0x12, 0x09,
	0x0a, 0x05, 0x4f, 0x54, 0x48, 0x45, 0x52, 0x10, 0x01, 0x2a, 0x23, 0x0a, 0x09, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x61, 0x74, 0x49, 0x6e, 0x10,
	0x00, 0x12, 0x0b, 0x0a, 0x07, 0x54, 0x61, 0x6b, 0x65, 0x4f, 0x75, 0x74, 0x10, 0x01, 0x2a, 0x19,
	0x0a, 0x0c, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x09,
	0x0a, 0x05, 0x50, 0x52, 0x49, 0x43, 0x45, 0x10, 0x00, 0x32, 0xb8, 0x0f, 0x0a, 0x0a, 0x50, 0x6f,
	0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x50, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x73, 0x12, 0x1f, 0x2e, 0x63, 0x61, 0x66, 0x65, 0x6c, 0x6f, 0x67, 0x6f,
	0x73, 0x2e, 0x70, 0x6f, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x63, 0x61, 0x66, 0x65, 0x6c, 0x6f, 0x67,
	0x6f, 0x73, 0x2e, 0x70, 0x6f, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6c, 0x0a, 0x17, 0x47, 0x65,
	0x74, 0x55, 0x6e, 0x70, 0x61, 0x69, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x42, 0x79, 0x53,
	0x65, 0x61, 0x74, 0x49, 0x64, 0x12, 0x2d, 0x2e, 0x63, 0x61, 0x66, 0x65, 0x6c, 0x6f, 0x67, 0x6f,
	0x73, 0x2e, 0x70, 0x6f, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x6e, 0x70, 0x61, 0x69, 0x64, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x73, 0x42, 0x79, 0x53, 0x65, 0x61, 0x74, 0x49, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x63, 0x61, 0x66, 0x65, 0x6c, 0x6f, 0x67, 0x6f, 0x73,
	0x2e, 0x70, 0x6f, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x09, 0x50, 0x6f, 0x73, 0x74,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x1f, 0x2e, 0x63, 0x61, 0x66, 0x65, 0x6c, 0x6f, 0x67, 0x6f,
	0x73, 0x2e, 0x70, 0x6f, 0x73, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x63, 0x61, 0x66, 0x65, 0x6c, 0x6f, 0x67,
	0x6f, 0x73, 0x2e, 0x70, 0x6f, 0x73, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4b, 0x0a, 0x0b, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x21, 0x2e, 0x63, 0x61, 0x66, 0x65,
	0x6c, 0x6f, 0x67, 0x6f, 0x73, 0x2e, 0x70, 0x6f, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x63,
	0x61, 0x66, 0x65, 0x6c, 0x6f, 0x67, 0x6f, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x52, 0x0a, 0x0b, 0x50, 0x6f, 0x73, 0x74, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x21, 0x2e, 0x63, 0x61, 0x66, 0x65, 0x6c, 0x6f, 0x67,
	0x6f, 0x73, 0x2e, 0x70, 0x6f, 0x73, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x63, 0x61, 0x66, 0x65,
	0x6c, 0x6f, 0x67, 0x6f, 0x73, 0x2e, 0x70, 0x6f, 0x73, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x56, 0x0a, 0x0d, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x23, 0x2e, 0x63,
	0x61, 0x66, 0x65, 0x6c, 0x6f, 0x67, 0x6f, 0x73, 0x2e, 0x70, 0x6f, 0x73, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1e, 0x2e, 0x63, 0x61, 0x66, 0x65, 0x6c, 0x6f, 0x67, 0x6f, 0x73, 0x2e, 0x70, 0x6f,
	0x73, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x73, 0x12, 0x17, 0x2e, 0x63, 0x61, 0x66, 0x65, 0x6c, 0x6f, 0x67, 0x6f, 0x73, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x22, 0x2e, 0x63, 0x61,
	0x66, 0x65, 0x6c, 0x6f, 0x67, 0x6f, 0x73, 0x2e, 0x70, 0x6f, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x5c, 0x0a, 0x0d, 0x50, 0x6f, 0x73, 0x74, 0x4e, 0x65, 0x77, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x12, 0x23, 0x2e, 0x63, 0x61, 0x66, 0x65, 0x6c, 0x6f, 0x67, 0x6f, 0x73, 0x2e, 0x70,
	0x6f, 0x73, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x4e, 0x65, 0x77, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x63, 0x61, 0x66, 0x65, 0x6c, 0x6f,
	0x67, 0x6f, 0x73, 0x2e, 0x70, 0x6f, 0x73, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x4e, 0x65, 0x77, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x4d, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12,
	0x22, 0x2e, 0x63, 0x61, 0x66, 0x65, 0x6c, 0x6f, 0x67, 0x6f, 0x73, 0x2e, 0x70, 0x6f, 0x73, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x63, 0x61, 0x66, 0x65, 0x6c, 0x6f, 0x67, 0x6f, 0x73, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x5e,
	0x0a, 0x14, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x12, 0x17, 0x2e, 0x63, 0x61, 0x66, 0x65, 0x6c, 0x6f, 0x67,
	0x6f, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a,
	0x2b, 0x2e, 0x63, 0x61, 0x66, 0x65, 0x6c, 0x6f, 0x67, 0x6f, 0x73, 0x2e, 0x70, 0x6f, 0x73, 0x2e,
	0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5b,
	0x0a, 0x13, 0x50, 0x6f, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x29, 0x2e, 0x63, 0x61, 0x66, 0x65, 0x6c, 0x6f, 0x67, 0x6f,
	0x73, 0x2e, 0x70, 0x6f, 0x73, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x17, 0x2e, 0x63, 0x61, 0x66, 0x65, 0x6c, 0x6f, 0x67, 0x6f, 0x73, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x4b, 0x0a, 0x0b, 0x50,
	0x6f, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x21, 0x2e, 0x63, 0x61, 0x66,
	0x65, 0x6c, 0x6f, 0x67, 0x6f, 0x73, 0x2e, 0x70, 0x6f, 0x73, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e,
	0x63, 0x61, 0x66, 0x65, 0x6c, 0x6f, 0x67, 0x6f, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x4f, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x23, 0x2e, 0x63, 0x61, 0x66, 0x65,
	0x6c, 0x6f, 0x67, 0x6f, 0x73, 0x2e, 0x70, 0x6f, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17,
	0x2e, 0x63, 0x61, 0x66, 0x65, 0x6c, 0x6f, 0x67, 0x6f, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x4f, 0x0a, 0x0d, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x23, 0x2e, 0x63, 0x61, 0x66,
	0x65, 0x6c, 0x6f, 0x67, 0x6f, 0x73, 0x2e, 0x70, 0x6f, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x17, 0x2e, 0x63, 0x61, 0x66, 0x65, 0x6c, 0x6f, 0x67, 0x6f, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x09, 0x50, 0x6f,
	0x73, 0x74, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x12, 0x1f, 0x2e, 0x63, 0x61, 0x66, 0x65, 0x6c, 0x6f,
	0x67, 0x6f, 0x73, 0x2e, 0x70, 0x6f, 0x73, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x53, 0x74, 0x6f, 0x63,
	0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x63, 0x61, 0x66, 0x65, 0x6c,
	0x6f, 0x67, 0x6f, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x73,
	0x12, 0x17, 0x2e, 0x63, 0x61, 0x66, 0x65, 0x6c, 0x6f, 0x67, 0x6f, 0x73, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x20, 0x2e, 0x63, 0x61, 0x66, 0x65,
	0x6c, 0x6f, 0x67, 0x6f, 0x73, 0x2e, 0x70, 0x6f, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f,
	0x63, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x51, 0x0a,
	0x0e, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x66, 0x66, 0x65, 0x65, 0x42, 0x65, 0x61, 0x6e, 0x12,
	0x24, 0x2e, 0x63, 0x61, 0x66, 0x65, 0x6c, 0x6f, 0x67, 0x6f, 0x73, 0x2e, 0x70, 0x6f, 0x73, 0x2e,
	0x50, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x66, 0x66, 0x65, 0x65, 0x42, 0x65, 0x61, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x63, 0x61, 0x66, 0x65, 0x6c, 0x6f, 0x67, 0x6f,
	0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00,
	0x12, 0x52, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x66, 0x66, 0x65, 0x65, 0x42, 0x65, 0x61,
	0x6e, 0x73, 0x12, 0x17, 0x2e, 0x63, 0x61, 0x66, 0x65, 0x6c, 0x6f, 0x67, 0x6f, 0x73, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x25, 0x2e, 0x63, 0x61,
	0x66, 0x65, 0x6c, 0x6f, 0x67, 0x6f, 0x73, 0x2e, 0x70, 0x6f, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x43,
	0x6f, 0x66, 0x66, 0x65, 0x65, 0x42, 0x65, 0x61, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x6c,
	0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x12, 0x17, 0x2e, 0x63, 0x61, 0x66, 0x65, 0x6c, 0x6f,
	0x67, 0x6f, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x1a, 0x17, 0x2e, 0x63, 0x61, 0x66, 0x65, 0x6c, 0x6f, 0x67, 0x6f, 0x73, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x08, 0x50,
	0x6f, 0x73, 0x74, 0x53, 0x65, 0x61, 0x74, 0x12, 0x1e, 0x2e, 0x63, 0x61, 0x66, 0x65, 0x6c, 0x6f,
	0x67, 0x6f, 0x73, 0x2e, 0x70, 0x6f, 0x73, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x53, 0x65, 0x61, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x63, 0x61, 0x66, 0x65, 0x6c, 0x6f,
	0x67, 0x6f, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x22, 0x00, 0x12, 0x49, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x61, 0x74,
	0x12, 0x20, 0x2e, 0x63, 0x61, 0x66, 0x65, 0x6c, 0x6f, 0x67, 0x6f, 0x73, 0x2e, 0x70, 0x6f, 0x73,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x17, 0x2e, 0x63, 0x61, 0x66, 0x65, 0x6c, 0x6f, 0x67, 0x6f, 0x73, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x46, 0x0a,
	0x08, 0x47, 0x65, 0x74, 0x53, 0x65, 0x61, 0x74, 0x73, 0x12, 0x17, 0x2e, 0x63, 0x61, 0x66, 0x65,
	0x6c, 0x6f, 0x67, 0x6f, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x1a, 0x1f, 0x2e, 0x63, 0x61, 0x66, 0x65, 0x6c, 0x6f, 0x67, 0x6f, 0x73, 0x2e, 0x70,
	0x6f, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x61, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4e, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x44, 0x69, 0x73, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x17, 0x2e, 0x63, 0x61, 0x66, 0x65, 0x6c, 0x6f, 0x67, 0x6f,
	0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x23,
	0x2e, 0x63, 0x61, 0x66, 0x65, 0x6c, 0x6f, 0x67, 0x6f, 0x73, 0x2e, 0x70, 0x6f, 0x73, 0x2e, 0x47,
	0x65, 0x74, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x0c, 0x50, 0x6f, 0x73, 0x74, 0x44, 0x69, 0x73,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x2e, 0x63, 0x61, 0x66, 0x65, 0x6c, 0x6f, 0x67, 0x6f,
	0x73, 0x2e, 0x70, 0x6f, 0x73, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x63, 0x61, 0x66, 0x65,
	0x6c, 0x6f, 0x67, 0x6f, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x22, 0x00, 0x42, 0x35, 0x5a, 0x33, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x4b, 0x61, 0x67, 0x75, 0x72, 0x61, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x2f, 0x63, 0x61, 0x66, 0x65, 0x6c, 0x6f, 0x67, 0x6f, 0x73, 0x2d, 0x67, 0x72, 0x70, 0x63, 0x2f,
	0x70, 0x6b, 0x67, 0x2f, 0x70, 0x6f, 0x73, 0x3b, 0x70, 0x6f, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_pos_pos_service_proto_rawDescOnce sync.Once
	file_pos_pos_service_proto_rawDescData = file_pos_pos_service_proto_rawDesc
)

func file_pos_pos_service_proto_rawDescGZIP() []byte {
	file_pos_pos_service_proto_rawDescOnce.Do(func() {
		file_pos_pos_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_pos_pos_service_proto_rawDescData)
	})
	return file_pos_pos_service_proto_rawDescData
}

var file_pos_pos_service_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_pos_pos_service_proto_msgTypes = make([]protoimpl.MessageInfo, 41)
var file_pos_pos_service_proto_goTypes = []any{
	(ProductType)(0),                       // 0: cafelogos.pos.ProductType
	(OrderType)(0),                         // 1: cafelogos.pos.OrderType
	(DiscountType)(0),                      // 2: cafelogos.pos.DiscountType
	(PostOrderResponse_Code)(0),            // 3: cafelogos.pos.PostOrderResponse.Code
	(Payment_PaymentType)(0),               // 4: cafelogos.pos.Payment.PaymentType
	(*GetOrdersRequest)(nil),               // 5: cafelogos.pos.GetOrdersRequest
	(*GetOrdersResponse)(nil),              // 6: cafelogos.pos.GetOrdersResponse
	(*GetOrderResponse)(nil),               // 7: cafelogos.pos.GetOrderResponse
	(*GetUnpaidOrdersBySeatIdRequest)(nil), // 8: cafelogos.pos.GetUnpaidOrdersBySeatIdRequest
	(*PostOrderRequest)(nil),               // 9: cafelogos.pos.PostOrderRequest
	(*PostOrderResponse)(nil),              // 10: cafelogos.pos.PostOrderResponse
	(*PostPaymentRequest)(nil),             // 11: cafelogos.pos.PostPaymentRequest
	(*UpdatePaymentRequest)(nil),           // 12: cafelogos.pos.UpdatePaymentRequest
	(*PaymentResponse)(nil),                // 13: cafelogos.pos.PaymentResponse
	(*DeleteOrderRequest)(nil),             // 14: cafelogos.pos.DeleteOrderRequest
	(*GetProductsResponse)(nil),            // 15: cafelogos.pos.GetProductsResponse
	(*GetProductCategoriesResponse)(nil),   // 16: cafelogos.pos.GetProductCategoriesResponse
	(*PostProductCategoryRequest)(nil),     // 17: cafelogos.pos.PostProductCategoryRequest
	(*PostProductRequest)(nil),             // 18: cafelogos.pos.PostProductRequest
	(*UpdateProductRequest)(nil),           // 19: cafelogos.pos.UpdateProductRequest
	(*DeleteProductRequest)(nil),           // 20: cafelogos.pos.DeleteProductRequest
	(*PostStockRequest)(nil),               // 21: cafelogos.pos.PostStockRequest
	(*GetStocksResponse)(nil),              // 22: cafelogos.pos.GetStocksResponse
	(*PostCoffeeBeanRequest)(nil),          // 23: cafelogos.pos.PostCoffeeBeanRequest
	(*GetCoffeeBeansResponse)(nil),         // 24: cafelogos.pos.GetCoffeeBeansResponse
	(*PostSeatRequest)(nil),                // 25: cafelogos.pos.PostSeatRequest
	(*UpdateSeatRequest)(nil),              // 26: cafelogos.pos.UpdateSeatRequest
	(*GetSeatsResponse)(nil),               // 27: cafelogos.pos.GetSeatsResponse
	(*PostNewClientRequest)(nil),           // 28: cafelogos.pos.PostNewClientRequest
	(*PostNewClientResponse)(nil),          // 29: cafelogos.pos.PostNewClientResponse
	(*UpdateClientRequest)(nil),            // 30: cafelogos.pos.UpdateClientRequest
	(*GetDiscountsResponse)(nil),           // 31: cafelogos.pos.GetDiscountsResponse
	(*PostDiscountRequest)(nil),            // 32: cafelogos.pos.PostDiscountRequest
	(*Product)(nil),                        // 33: cafelogos.pos.Product
	(*ProductParam)(nil),                   // 34: cafelogos.pos.ProductParam
	(*ProductCategory)(nil),                // 35: cafelogos.pos.ProductCategory
	(*CoffeeBean)(nil),                     // 36: cafelogos.pos.CoffeeBean
	(*CoffeeBrew)(nil),                     // 37: cafelogos.pos.CoffeeBrew
	(*Stock)(nil),                          // 38: cafelogos.pos.Stock
	(*Order)(nil),                          // 39: cafelogos.pos.Order
	(*OrderParam)(nil),                     // 40: cafelogos.pos.OrderParam
	(*OrderItem)(nil),                      // 41: cafelogos.pos.OrderItem
	(*OrderDiscount)(nil),                  // 42: cafelogos.pos.OrderDiscount
	(*Discount)(nil),                       // 43: cafelogos.pos.Discount
	(*Payment)(nil),                        // 44: cafelogos.pos.Payment
	(*Seat)(nil),                           // 45: cafelogos.pos.Seat
	(*common.Empty)(nil),                   // 46: cafelogos.common.Empty
}
var file_pos_pos_service_proto_depIdxs = []int32{
	39, // 0: cafelogos.pos.GetOrdersResponse.orders:type_name -> cafelogos.pos.Order
	39, // 1: cafelogos.pos.GetOrderResponse.order:type_name -> cafelogos.pos.Order
	40, // 2: cafelogos.pos.PostOrderRequest.order:type_name -> cafelogos.pos.OrderParam
	3,  // 3: cafelogos.pos.PostOrderResponse.code:type_name -> cafelogos.pos.PostOrderResponse.Code
	44, // 4: cafelogos.pos.PostPaymentRequest.payment:type_name -> cafelogos.pos.Payment
	44, // 5: cafelogos.pos.UpdatePaymentRequest.payment:type_name -> cafelogos.pos.Payment
	44, // 6: cafelogos.pos.PaymentResponse.payment:type_name -> cafelogos.pos.Payment
	10, // 7: cafelogos.pos.PaymentResponse.order_responses:type_name -> cafelogos.pos.PostOrderResponse
	33, // 8: cafelogos.pos.GetProductsResponse.products:type_name -> cafelogos.pos.Product
	35, // 9: cafelogos.pos.GetProductCategoriesResponse.product_categories:type_name -> cafelogos.pos.ProductCategory
	34, // 10: cafelogos.pos.PostProductRequest.product:type_name -> cafelogos.pos.ProductParam
	34, // 11: cafelogos.pos.UpdateProductRequest.product:type_name -> cafelogos.pos.ProductParam
	38, // 12: cafelogos.pos.GetStocksResponse.stocks:type_name -> cafelogos.pos.Stock
	36, // 13: cafelogos.pos.GetCoffeeBeansResponse.coffee_beans:type_name -> cafelogos.pos.CoffeeBean
	45, // 14: cafelogos.pos.UpdateSeatRequest.seat:type_name -> cafelogos.pos.Seat
	45, // 15: cafelogos.pos.GetSeatsResponse.seats:type_name -> cafelogos.pos.Seat
	43, // 16: cafelogos.pos.GetDiscountsResponse.discounts:type_name -> cafelogos.pos.Discount
	2,  // 17: cafelogos.pos.PostDiscountRequest.type:type_name -> cafelogos.pos.DiscountType
	35, // 18: cafelogos.pos.Product.product_category:type_name -> cafelogos.pos.ProductCategory
	0,  // 19: cafelogos.pos.Product.product_type:type_name -> cafelogos.pos.ProductType
	36, // 20: cafelogos.pos.Product.coffee_bean:type_name -> cafelogos.pos.CoffeeBean
	37, // 21: cafelogos.pos.Product.coffee_brews:type_name -> cafelogos.pos.CoffeeBrew
	38, // 22: cafelogos.pos.Product.stock:type_name -> cafelogos.pos.Stock
	0,  // 23: cafelogos.pos.ProductParam.product_type:type_name -> cafelogos.pos.ProductType
	37, // 24: cafelogos.pos.ProductParam.coffee_brews:type_name -> cafelogos.pos.CoffeeBrew
	41, // 25: cafelogos.pos.Order.items:type_name -> cafelogos.pos.OrderItem
	42, // 26: cafelogos.pos.Order.discounts:type_name -> cafelogos.pos.OrderDiscount
	1,  // 27: cafelogos.pos.Order.order_type:type_name -> cafelogos.pos.OrderType
	41, // 28: cafelogos.pos.OrderParam.items:type_name -> cafelogos.pos.OrderItem
	42, // 29: cafelogos.pos.OrderParam.discounts:type_name -> cafelogos.pos.OrderDiscount
	1,  // 30: cafelogos.pos.OrderParam.order_type:type_name -> cafelogos.pos.OrderType
	2,  // 31: cafelogos.pos.OrderDiscount.type:type_name -> cafelogos.pos.DiscountType
	2,  // 32: cafelogos.pos.Discount.type:type_name -> cafelogos.pos.DiscountType
	4,  // 33: cafelogos.pos.Payment.type:type_name -> cafelogos.pos.Payment.PaymentType
	40, // 34: cafelogos.pos.Payment.post_orders:type_name -> cafelogos.pos.OrderParam
	5,  // 35: cafelogos.pos.PosService.GetOrders:input_type -> cafelogos.pos.GetOrdersRequest
	8,  // 36: cafelogos.pos.PosService.GetUnpaidOrdersBySeatId:input_type -> cafelogos.pos.GetUnpaidOrdersBySeatIdRequest
	9,  // 37: cafelogos.pos.PosService.PostOrder:input_type -> cafelogos.pos.PostOrderRequest
	14, // 38: cafelogos.pos.PosService.DeleteOrder:input_type -> cafelogos.pos.DeleteOrderRequest
	11, // 39: cafelogos.pos.PosService.PostPayment:input_type -> cafelogos.pos.PostPaymentRequest
	12, // 40: cafelogos.pos.PosService.UpdatePayment:input_type -> cafelogos.pos.UpdatePaymentRequest
	46, // 41: cafelogos.pos.PosService.GetProducts:input_type -> cafelogos.common.Empty
	28, // 42: cafelogos.pos.PosService.PostNewClient:input_type -> cafelogos.pos.PostNewClientRequest
	30, // 43: cafelogos.pos.PosService.UpdateClient:input_type -> cafelogos.pos.UpdateClientRequest
	46, // 44: cafelogos.pos.PosService.GetProductCategories:input_type -> cafelogos.common.Empty
	17, // 45: cafelogos.pos.PosService.PostProductCategory:input_type -> cafelogos.pos.PostProductCategoryRequest
	18, // 46: cafelogos.pos.PosService.PostProduct:input_type -> cafelogos.pos.PostProductRequest
	19, // 47: cafelogos.pos.PosService.UpdateProduct:input_type -> cafelogos.pos.UpdateProductRequest
	20, // 48: cafelogos.pos.PosService.DeleteProduct:input_type -> cafelogos.pos.DeleteProductRequest
	21, // 49: cafelogos.pos.PosService.PostStock:input_type -> cafelogos.pos.PostStockRequest
	46, // 50: cafelogos.pos.PosService.GetStocks:input_type -> cafelogos.common.Empty
	23, // 51: cafelogos.pos.PosService.PostCoffeeBean:input_type -> cafelogos.pos.PostCoffeeBeanRequest
	46, // 52: cafelogos.pos.PosService.GetCoffeeBeans:input_type -> cafelogos.common.Empty
	46, // 53: cafelogos.pos.PosService.DeleteAllOrders:input_type -> cafelogos.common.Empty
	25, // 54: cafelogos.pos.PosService.PostSeat:input_type -> cafelogos.pos.PostSeatRequest
	26, // 55: cafelogos.pos.PosService.UpdateSeat:input_type -> cafelogos.pos.UpdateSeatRequest
	46, // 56: cafelogos.pos.PosService.GetSeats:input_type -> cafelogos.common.Empty
	46, // 57: cafelogos.pos.PosService.GetDiscounts:input_type -> cafelogos.common.Empty
	32, // 58: cafelogos.pos.PosService.PostDiscount:input_type -> cafelogos.pos.PostDiscountRequest
	6,  // 59: cafelogos.pos.PosService.GetOrders:output_type -> cafelogos.pos.GetOrdersResponse
	6,  // 60: cafelogos.pos.PosService.GetUnpaidOrdersBySeatId:output_type -> cafelogos.pos.GetOrdersResponse
	10, // 61: cafelogos.pos.PosService.PostOrder:output_type -> cafelogos.pos.PostOrderResponse
	46, // 62: cafelogos.pos.PosService.DeleteOrder:output_type -> cafelogos.common.Empty
	13, // 63: cafelogos.pos.PosService.PostPayment:output_type -> cafelogos.pos.PaymentResponse
	13, // 64: cafelogos.pos.PosService.UpdatePayment:output_type -> cafelogos.pos.PaymentResponse
	15, // 65: cafelogos.pos.PosService.GetProducts:output_type -> cafelogos.pos.GetProductsResponse
	29, // 66: cafelogos.pos.PosService.PostNewClient:output_type -> cafelogos.pos.PostNewClientResponse
	46, // 67: cafelogos.pos.PosService.UpdateClient:output_type -> cafelogos.common.Empty
	16, // 68: cafelogos.pos.PosService.GetProductCategories:output_type -> cafelogos.pos.GetProductCategoriesResponse
	46, // 69: cafelogos.pos.PosService.PostProductCategory:output_type -> cafelogos.common.Empty
	46, // 70: cafelogos.pos.PosService.PostProduct:output_type -> cafelogos.common.Empty
	46, // 71: cafelogos.pos.PosService.UpdateProduct:output_type -> cafelogos.common.Empty
	46, // 72: cafelogos.pos.PosService.DeleteProduct:output_type -> cafelogos.common.Empty
	46, // 73: cafelogos.pos.PosService.PostStock:output_type -> cafelogos.common.Empty
	22, // 74: cafelogos.pos.PosService.GetStocks:output_type -> cafelogos.pos.GetStocksResponse
	46, // 75: cafelogos.pos.PosService.PostCoffeeBean:output_type -> cafelogos.common.Empty
	24, // 76: cafelogos.pos.PosService.GetCoffeeBeans:output_type -> cafelogos.pos.GetCoffeeBeansResponse
	46, // 77: cafelogos.pos.PosService.DeleteAllOrders:output_type -> cafelogos.common.Empty
	46, // 78: cafelogos.pos.PosService.PostSeat:output_type -> cafelogos.common.Empty
	46, // 79: cafelogos.pos.PosService.UpdateSeat:output_type -> cafelogos.common.Empty
	27, // 80: cafelogos.pos.PosService.GetSeats:output_type -> cafelogos.pos.GetSeatsResponse
	31, // 81: cafelogos.pos.PosService.GetDiscounts:output_type -> cafelogos.pos.GetDiscountsResponse
	46, // 82: cafelogos.pos.PosService.PostDiscount:output_type -> cafelogos.common.Empty
	59, // [59:83] is the sub-list for method output_type
	35, // [35:59] is the sub-list for method input_type
	35, // [35:35] is the sub-list for extension type_name
	35, // [35:35] is the sub-list for extension extendee
	0,  // [0:35] is the sub-list for field type_name
}

func init() { file_pos_pos_service_proto_init() }
func file_pos_pos_service_proto_init() {
	if File_pos_pos_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pos_pos_service_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*GetOrdersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pos_pos_service_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*GetOrdersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pos_pos_service_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*GetOrderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pos_pos_service_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*GetUnpaidOrdersBySeatIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pos_pos_service_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*PostOrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pos_pos_service_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*PostOrderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pos_pos_service_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*PostPaymentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pos_pos_service_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*UpdatePaymentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pos_pos_service_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*PaymentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pos_pos_service_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteOrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pos_pos_service_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*GetProductsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pos_pos_service_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*GetProductCategoriesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pos_pos_service_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*PostProductCategoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pos_pos_service_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*PostProductRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pos_pos_service_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateProductRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pos_pos_service_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteProductRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pos_pos_service_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*PostStockRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pos_pos_service_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*GetStocksResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pos_pos_service_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*PostCoffeeBeanRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pos_pos_service_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*GetCoffeeBeansResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pos_pos_service_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*PostSeatRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pos_pos_service_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateSeatRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pos_pos_service_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*GetSeatsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pos_pos_service_proto_msgTypes[23].Exporter = func(v any, i int) any {
			switch v := v.(*PostNewClientRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pos_pos_service_proto_msgTypes[24].Exporter = func(v any, i int) any {
			switch v := v.(*PostNewClientResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pos_pos_service_proto_msgTypes[25].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateClientRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pos_pos_service_proto_msgTypes[26].Exporter = func(v any, i int) any {
			switch v := v.(*GetDiscountsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pos_pos_service_proto_msgTypes[27].Exporter = func(v any, i int) any {
			switch v := v.(*PostDiscountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pos_pos_service_proto_msgTypes[28].Exporter = func(v any, i int) any {
			switch v := v.(*Product); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pos_pos_service_proto_msgTypes[29].Exporter = func(v any, i int) any {
			switch v := v.(*ProductParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pos_pos_service_proto_msgTypes[30].Exporter = func(v any, i int) any {
			switch v := v.(*ProductCategory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pos_pos_service_proto_msgTypes[31].Exporter = func(v any, i int) any {
			switch v := v.(*CoffeeBean); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pos_pos_service_proto_msgTypes[32].Exporter = func(v any, i int) any {
			switch v := v.(*CoffeeBrew); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pos_pos_service_proto_msgTypes[33].Exporter = func(v any, i int) any {
			switch v := v.(*Stock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pos_pos_service_proto_msgTypes[34].Exporter = func(v any, i int) any {
			switch v := v.(*Order); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pos_pos_service_proto_msgTypes[35].Exporter = func(v any, i int) any {
			switch v := v.(*OrderParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pos_pos_service_proto_msgTypes[36].Exporter = func(v any, i int) any {
			switch v := v.(*OrderItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pos_pos_service_proto_msgTypes[37].Exporter = func(v any, i int) any {
			switch v := v.(*OrderDiscount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pos_pos_service_proto_msgTypes[38].Exporter = func(v any, i int) any {
			switch v := v.(*Discount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pos_pos_service_proto_msgTypes[39].Exporter = func(v any, i int) any {
			switch v := v.(*Payment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pos_pos_service_proto_msgTypes[40].Exporter = func(v any, i int) any {
			switch v := v.(*Seat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pos_pos_service_proto_rawDesc,
			NumEnums:      5,
			NumMessages:   41,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pos_pos_service_proto_goTypes,
		DependencyIndexes: file_pos_pos_service_proto_depIdxs,
		EnumInfos:         file_pos_pos_service_proto_enumTypes,
		MessageInfos:      file_pos_pos_service_proto_msgTypes,
	}.Build()
	File_pos_pos_service_proto = out.File
	file_pos_pos_service_proto_rawDesc = nil
	file_pos_pos_service_proto_goTypes = nil
	file_pos_pos_service_proto_depIdxs = nil
}
