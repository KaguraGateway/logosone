// @generated by protoc-gen-es v1.10.0 with parameter "target=ts+js+dts"
// @generated from file pos/pos_service.proto (package cafelogos.pos, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from enum cafelogos.pos.ProductType
 */
export declare enum ProductType {
  /**
   * @generated from enum value: COFFEE = 0;
   */
  COFFEE = 0,

  /**
   * @generated from enum value: OTHER = 1;
   */
  OTHER = 1,
}

/**
 * * Order 
 *
 * @generated from enum cafelogos.pos.OrderType
 */
export declare enum OrderType {
  /**
   * @generated from enum value: EatIn = 0;
   */
  EatIn = 0,

  /**
   * @generated from enum value: TakeOut = 1;
   */
  TakeOut = 1,
}

/**
 * @generated from enum cafelogos.pos.DiscountType
 */
export declare enum DiscountType {
  /**
   * @generated from enum value: PRICE = 0;
   */
  PRICE = 0,
}

/**
 * *
 * Request/Response
 *
 * @generated from message cafelogos.pos.GetOrdersRequest
 */
export declare class GetOrdersRequest extends Message<GetOrdersRequest> {
  constructor(data?: PartialMessage<GetOrdersRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "cafelogos.pos.GetOrdersRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetOrdersRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetOrdersRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetOrdersRequest;

  static equals(a: GetOrdersRequest | PlainMessage<GetOrdersRequest> | undefined, b: GetOrdersRequest | PlainMessage<GetOrdersRequest> | undefined): boolean;
}

/**
 * @generated from message cafelogos.pos.GetOrdersResponse
 */
export declare class GetOrdersResponse extends Message<GetOrdersResponse> {
  /**
   * @generated from field: repeated cafelogos.pos.Order orders = 1;
   */
  orders: Order[];

  constructor(data?: PartialMessage<GetOrdersResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "cafelogos.pos.GetOrdersResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetOrdersResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetOrdersResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetOrdersResponse;

  static equals(a: GetOrdersResponse | PlainMessage<GetOrdersResponse> | undefined, b: GetOrdersResponse | PlainMessage<GetOrdersResponse> | undefined): boolean;
}

/**
 * @generated from message cafelogos.pos.GetOrderResponse
 */
export declare class GetOrderResponse extends Message<GetOrderResponse> {
  /**
   * @generated from field: cafelogos.pos.Order order = 1;
   */
  order?: Order;

  constructor(data?: PartialMessage<GetOrderResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "cafelogos.pos.GetOrderResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetOrderResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetOrderResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetOrderResponse;

  static equals(a: GetOrderResponse | PlainMessage<GetOrderResponse> | undefined, b: GetOrderResponse | PlainMessage<GetOrderResponse> | undefined): boolean;
}

/**
 * @generated from message cafelogos.pos.GetUnpaidOrdersBySeatIdRequest
 */
export declare class GetUnpaidOrdersBySeatIdRequest extends Message<GetUnpaidOrdersBySeatIdRequest> {
  /**
   * @generated from field: string seat_id = 1;
   */
  seatId: string;

  constructor(data?: PartialMessage<GetUnpaidOrdersBySeatIdRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "cafelogos.pos.GetUnpaidOrdersBySeatIdRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetUnpaidOrdersBySeatIdRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetUnpaidOrdersBySeatIdRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetUnpaidOrdersBySeatIdRequest;

  static equals(a: GetUnpaidOrdersBySeatIdRequest | PlainMessage<GetUnpaidOrdersBySeatIdRequest> | undefined, b: GetUnpaidOrdersBySeatIdRequest | PlainMessage<GetUnpaidOrdersBySeatIdRequest> | undefined): boolean;
}

/**
 * @generated from message cafelogos.pos.PostOrderRequest
 */
export declare class PostOrderRequest extends Message<PostOrderRequest> {
  /**
   * @generated from field: cafelogos.pos.OrderParam order = 1;
   */
  order?: OrderParam;

  /**
   * @generated from field: cafelogos.pos.PostOrderOption option = 2;
   */
  option?: PostOrderOption;

  constructor(data?: PartialMessage<PostOrderRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "cafelogos.pos.PostOrderRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PostOrderRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PostOrderRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PostOrderRequest;

  static equals(a: PostOrderRequest | PlainMessage<PostOrderRequest> | undefined, b: PostOrderRequest | PlainMessage<PostOrderRequest> | undefined): boolean;
}

/**
 * @generated from message cafelogos.pos.PostOrderOption
 */
export declare class PostOrderOption extends Message<PostOrderOption> {
  /**
   * @generated from field: bool is_post_orderlink = 1;
   */
  isPostOrderlink: boolean;

  constructor(data?: PartialMessage<PostOrderOption>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "cafelogos.pos.PostOrderOption";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PostOrderOption;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PostOrderOption;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PostOrderOption;

  static equals(a: PostOrderOption | PlainMessage<PostOrderOption> | undefined, b: PostOrderOption | PlainMessage<PostOrderOption> | undefined): boolean;
}

/**
 * @generated from message cafelogos.pos.PostOrderResponse
 */
export declare class PostOrderResponse extends Message<PostOrderResponse> {
  /**
   * @generated from field: cafelogos.pos.PostOrderResponse.Code code = 1;
   */
  code: PostOrderResponse_Code;

  /**
   * @generated from field: string error_message = 2;
   */
  errorMessage: string;

  /**
   * @generated from field: string call_number = 3;
   */
  callNumber: string;

  constructor(data?: PartialMessage<PostOrderResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "cafelogos.pos.PostOrderResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PostOrderResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PostOrderResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PostOrderResponse;

  static equals(a: PostOrderResponse | PlainMessage<PostOrderResponse> | undefined, b: PostOrderResponse | PlainMessage<PostOrderResponse> | undefined): boolean;
}

/**
 * @generated from enum cafelogos.pos.PostOrderResponse.Code
 */
export declare enum PostOrderResponse_Code {
  /**
   * @generated from enum value: OK = 0;
   */
  OK = 0,

  /**
   * @generated from enum value: SOLD_OUT_PRODUCT = 1;
   */
  SOLD_OUT_PRODUCT = 1,

  /**
   * @generated from enum value: NOT_SOLD_PRODUCT = 2;
   */
  NOT_SOLD_PRODUCT = 2,

  /**
   * @generated from enum value: OTHER = 3;
   */
  OTHER = 3,
}

/**
 * @generated from message cafelogos.pos.PostPaymentRequest
 */
export declare class PostPaymentRequest extends Message<PostPaymentRequest> {
  /**
   * @generated from field: cafelogos.pos.PaymentParam payment = 1;
   */
  payment?: PaymentParam;

  /**
   * @generated from field: repeated cafelogos.pos.OrderParam post_orders = 2;
   */
  postOrders: OrderParam[];

  /**
   * @generated from field: repeated string order_ids = 3;
   */
  orderIds: string[];

  /**
   * @generated from field: cafelogos.pos.PostPaymentRequestOption option = 4;
   */
  option?: PostPaymentRequestOption;

  constructor(data?: PartialMessage<PostPaymentRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "cafelogos.pos.PostPaymentRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PostPaymentRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PostPaymentRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PostPaymentRequest;

  static equals(a: PostPaymentRequest | PlainMessage<PostPaymentRequest> | undefined, b: PostPaymentRequest | PlainMessage<PostPaymentRequest> | undefined): boolean;
}

/**
 * @generated from message cafelogos.pos.PostPaymentRequestOption
 */
export declare class PostPaymentRequestOption extends Message<PostPaymentRequestOption> {
  /**
   * @generated from field: bool is_post_orderlink = 1;
   */
  isPostOrderlink: boolean;

  constructor(data?: PartialMessage<PostPaymentRequestOption>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "cafelogos.pos.PostPaymentRequestOption";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PostPaymentRequestOption;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PostPaymentRequestOption;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PostPaymentRequestOption;

  static equals(a: PostPaymentRequestOption | PlainMessage<PostPaymentRequestOption> | undefined, b: PostPaymentRequestOption | PlainMessage<PostPaymentRequestOption> | undefined): boolean;
}

/**
 * @generated from message cafelogos.pos.UpdatePaymentRequest
 */
export declare class UpdatePaymentRequest extends Message<UpdatePaymentRequest> {
  /**
   * @generated from field: cafelogos.pos.PaymentParam payment = 1;
   */
  payment?: PaymentParam;

  constructor(data?: PartialMessage<UpdatePaymentRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "cafelogos.pos.UpdatePaymentRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdatePaymentRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdatePaymentRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdatePaymentRequest;

  static equals(a: UpdatePaymentRequest | PlainMessage<UpdatePaymentRequest> | undefined, b: UpdatePaymentRequest | PlainMessage<UpdatePaymentRequest> | undefined): boolean;
}

/**
 * @generated from message cafelogos.pos.PaymentResponse
 */
export declare class PaymentResponse extends Message<PaymentResponse> {
  /**
   * @generated from field: int32 status = 1;
   */
  status: number;

  /**
   * @generated from field: cafelogos.pos.Payment payment = 2;
   */
  payment?: Payment;

  /**
   * @generated from field: repeated cafelogos.pos.PostOrderResponse order_responses = 3;
   */
  orderResponses: PostOrderResponse[];

  constructor(data?: PartialMessage<PaymentResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "cafelogos.pos.PaymentResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PaymentResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PaymentResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PaymentResponse;

  static equals(a: PaymentResponse | PlainMessage<PaymentResponse> | undefined, b: PaymentResponse | PlainMessage<PaymentResponse> | undefined): boolean;
}

/**
 * @generated from message cafelogos.pos.GetExternalPaymentRequest
 */
export declare class GetExternalPaymentRequest extends Message<GetExternalPaymentRequest> {
  /**
   * @generated from field: string payment_id = 1;
   */
  paymentId: string;

  constructor(data?: PartialMessage<GetExternalPaymentRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "cafelogos.pos.GetExternalPaymentRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetExternalPaymentRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetExternalPaymentRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetExternalPaymentRequest;

  static equals(a: GetExternalPaymentRequest | PlainMessage<GetExternalPaymentRequest> | undefined, b: GetExternalPaymentRequest | PlainMessage<GetExternalPaymentRequest> | undefined): boolean;
}

/**
 * @generated from message cafelogos.pos.GetExternalPaymentResponse
 */
export declare class GetExternalPaymentResponse extends Message<GetExternalPaymentResponse> {
  /**
   * @generated from field: cafelogos.pos.PaymentExternal external_payment = 1;
   */
  externalPayment?: PaymentExternal;

  constructor(data?: PartialMessage<GetExternalPaymentResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "cafelogos.pos.GetExternalPaymentResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetExternalPaymentResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetExternalPaymentResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetExternalPaymentResponse;

  static equals(a: GetExternalPaymentResponse | PlainMessage<GetExternalPaymentResponse> | undefined, b: GetExternalPaymentResponse | PlainMessage<GetExternalPaymentResponse> | undefined): boolean;
}

/**
 * @generated from message cafelogos.pos.DeleteOrderRequest
 */
export declare class DeleteOrderRequest extends Message<DeleteOrderRequest> {
  /**
   * @generated from field: string order_id = 1;
   */
  orderId: string;

  constructor(data?: PartialMessage<DeleteOrderRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "cafelogos.pos.DeleteOrderRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteOrderRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteOrderRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteOrderRequest;

  static equals(a: DeleteOrderRequest | PlainMessage<DeleteOrderRequest> | undefined, b: DeleteOrderRequest | PlainMessage<DeleteOrderRequest> | undefined): boolean;
}

/**
 * @generated from message cafelogos.pos.GetProductsResponse
 */
export declare class GetProductsResponse extends Message<GetProductsResponse> {
  /**
   * @generated from field: repeated cafelogos.pos.Product products = 1;
   */
  products: Product[];

  constructor(data?: PartialMessage<GetProductsResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "cafelogos.pos.GetProductsResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetProductsResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetProductsResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetProductsResponse;

  static equals(a: GetProductsResponse | PlainMessage<GetProductsResponse> | undefined, b: GetProductsResponse | PlainMessage<GetProductsResponse> | undefined): boolean;
}

/**
 * @generated from message cafelogos.pos.GetProductCategoriesResponse
 */
export declare class GetProductCategoriesResponse extends Message<GetProductCategoriesResponse> {
  /**
   * @generated from field: repeated cafelogos.pos.ProductCategory product_categories = 1;
   */
  productCategories: ProductCategory[];

  constructor(data?: PartialMessage<GetProductCategoriesResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "cafelogos.pos.GetProductCategoriesResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetProductCategoriesResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetProductCategoriesResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetProductCategoriesResponse;

  static equals(a: GetProductCategoriesResponse | PlainMessage<GetProductCategoriesResponse> | undefined, b: GetProductCategoriesResponse | PlainMessage<GetProductCategoriesResponse> | undefined): boolean;
}

/**
 * @generated from message cafelogos.pos.PostProductCategoryRequest
 */
export declare class PostProductCategoryRequest extends Message<PostProductCategoryRequest> {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  constructor(data?: PartialMessage<PostProductCategoryRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "cafelogos.pos.PostProductCategoryRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PostProductCategoryRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PostProductCategoryRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PostProductCategoryRequest;

  static equals(a: PostProductCategoryRequest | PlainMessage<PostProductCategoryRequest> | undefined, b: PostProductCategoryRequest | PlainMessage<PostProductCategoryRequest> | undefined): boolean;
}

/**
 * @generated from message cafelogos.pos.PostProductRequest
 */
export declare class PostProductRequest extends Message<PostProductRequest> {
  /**
   * @generated from field: cafelogos.pos.ProductParam product = 1;
   */
  product?: ProductParam;

  constructor(data?: PartialMessage<PostProductRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "cafelogos.pos.PostProductRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PostProductRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PostProductRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PostProductRequest;

  static equals(a: PostProductRequest | PlainMessage<PostProductRequest> | undefined, b: PostProductRequest | PlainMessage<PostProductRequest> | undefined): boolean;
}

/**
 * @generated from message cafelogos.pos.UpdateProductRequest
 */
export declare class UpdateProductRequest extends Message<UpdateProductRequest> {
  /**
   * @generated from field: string product_id = 1;
   */
  productId: string;

  /**
   * @generated from field: cafelogos.pos.ProductParam product = 2;
   */
  product?: ProductParam;

  constructor(data?: PartialMessage<UpdateProductRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "cafelogos.pos.UpdateProductRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateProductRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateProductRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateProductRequest;

  static equals(a: UpdateProductRequest | PlainMessage<UpdateProductRequest> | undefined, b: UpdateProductRequest | PlainMessage<UpdateProductRequest> | undefined): boolean;
}

/**
 * @generated from message cafelogos.pos.DeleteProductRequest
 */
export declare class DeleteProductRequest extends Message<DeleteProductRequest> {
  /**
   * @generated from field: string product_id = 1;
   */
  productId: string;

  constructor(data?: PartialMessage<DeleteProductRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "cafelogos.pos.DeleteProductRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteProductRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteProductRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteProductRequest;

  static equals(a: DeleteProductRequest | PlainMessage<DeleteProductRequest> | undefined, b: DeleteProductRequest | PlainMessage<DeleteProductRequest> | undefined): boolean;
}

/**
 * @generated from message cafelogos.pos.PostStockRequest
 */
export declare class PostStockRequest extends Message<PostStockRequest> {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: uint32 quantity = 2;
   */
  quantity: number;

  constructor(data?: PartialMessage<PostStockRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "cafelogos.pos.PostStockRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PostStockRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PostStockRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PostStockRequest;

  static equals(a: PostStockRequest | PlainMessage<PostStockRequest> | undefined, b: PostStockRequest | PlainMessage<PostStockRequest> | undefined): boolean;
}

/**
 * @generated from message cafelogos.pos.GetStocksResponse
 */
export declare class GetStocksResponse extends Message<GetStocksResponse> {
  /**
   * @generated from field: repeated cafelogos.pos.Stock stocks = 1;
   */
  stocks: Stock[];

  constructor(data?: PartialMessage<GetStocksResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "cafelogos.pos.GetStocksResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetStocksResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetStocksResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetStocksResponse;

  static equals(a: GetStocksResponse | PlainMessage<GetStocksResponse> | undefined, b: GetStocksResponse | PlainMessage<GetStocksResponse> | undefined): boolean;
}

/**
 * @generated from message cafelogos.pos.UpdateStockRequest
 */
export declare class UpdateStockRequest extends Message<UpdateStockRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * @generated from field: uint32 quantity = 3;
   */
  quantity: number;

  constructor(data?: PartialMessage<UpdateStockRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "cafelogos.pos.UpdateStockRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateStockRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateStockRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateStockRequest;

  static equals(a: UpdateStockRequest | PlainMessage<UpdateStockRequest> | undefined, b: UpdateStockRequest | PlainMessage<UpdateStockRequest> | undefined): boolean;
}

/**
 * @generated from message cafelogos.pos.PostCoffeeBeanRequest
 */
export declare class PostCoffeeBeanRequest extends Message<PostCoffeeBeanRequest> {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: int32 gram_quantity = 2;
   */
  gramQuantity: number;

  constructor(data?: PartialMessage<PostCoffeeBeanRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "cafelogos.pos.PostCoffeeBeanRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PostCoffeeBeanRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PostCoffeeBeanRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PostCoffeeBeanRequest;

  static equals(a: PostCoffeeBeanRequest | PlainMessage<PostCoffeeBeanRequest> | undefined, b: PostCoffeeBeanRequest | PlainMessage<PostCoffeeBeanRequest> | undefined): boolean;
}

/**
 * @generated from message cafelogos.pos.GetCoffeeBeansResponse
 */
export declare class GetCoffeeBeansResponse extends Message<GetCoffeeBeansResponse> {
  /**
   * @generated from field: repeated cafelogos.pos.CoffeeBean coffee_beans = 1;
   */
  coffeeBeans: CoffeeBean[];

  constructor(data?: PartialMessage<GetCoffeeBeansResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "cafelogos.pos.GetCoffeeBeansResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetCoffeeBeansResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetCoffeeBeansResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetCoffeeBeansResponse;

  static equals(a: GetCoffeeBeansResponse | PlainMessage<GetCoffeeBeansResponse> | undefined, b: GetCoffeeBeansResponse | PlainMessage<GetCoffeeBeansResponse> | undefined): boolean;
}

/**
 * @generated from message cafelogos.pos.PostSeatRequest
 */
export declare class PostSeatRequest extends Message<PostSeatRequest> {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  constructor(data?: PartialMessage<PostSeatRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "cafelogos.pos.PostSeatRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PostSeatRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PostSeatRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PostSeatRequest;

  static equals(a: PostSeatRequest | PlainMessage<PostSeatRequest> | undefined, b: PostSeatRequest | PlainMessage<PostSeatRequest> | undefined): boolean;
}

/**
 * @generated from message cafelogos.pos.UpdateSeatRequest
 */
export declare class UpdateSeatRequest extends Message<UpdateSeatRequest> {
  /**
   * @generated from field: cafelogos.pos.Seat seat = 1;
   */
  seat?: Seat;

  constructor(data?: PartialMessage<UpdateSeatRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "cafelogos.pos.UpdateSeatRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateSeatRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateSeatRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateSeatRequest;

  static equals(a: UpdateSeatRequest | PlainMessage<UpdateSeatRequest> | undefined, b: UpdateSeatRequest | PlainMessage<UpdateSeatRequest> | undefined): boolean;
}

/**
 * @generated from message cafelogos.pos.DeleteSeatRequest
 */
export declare class DeleteSeatRequest extends Message<DeleteSeatRequest> {
  /**
   * @generated from field: string seat_id = 1;
   */
  seatId: string;

  constructor(data?: PartialMessage<DeleteSeatRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "cafelogos.pos.DeleteSeatRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteSeatRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteSeatRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteSeatRequest;

  static equals(a: DeleteSeatRequest | PlainMessage<DeleteSeatRequest> | undefined, b: DeleteSeatRequest | PlainMessage<DeleteSeatRequest> | undefined): boolean;
}

/**
 * @generated from message cafelogos.pos.GetSeatsResponse
 */
export declare class GetSeatsResponse extends Message<GetSeatsResponse> {
  /**
   * @generated from field: repeated cafelogos.pos.Seat seats = 1;
   */
  seats: Seat[];

  constructor(data?: PartialMessage<GetSeatsResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "cafelogos.pos.GetSeatsResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetSeatsResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetSeatsResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetSeatsResponse;

  static equals(a: GetSeatsResponse | PlainMessage<GetSeatsResponse> | undefined, b: GetSeatsResponse | PlainMessage<GetSeatsResponse> | undefined): boolean;
}

/**
 * @generated from message cafelogos.pos.PostNewClientRequest
 */
export declare class PostNewClientRequest extends Message<PostNewClientRequest> {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  constructor(data?: PartialMessage<PostNewClientRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "cafelogos.pos.PostNewClientRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PostNewClientRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PostNewClientRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PostNewClientRequest;

  static equals(a: PostNewClientRequest | PlainMessage<PostNewClientRequest> | undefined, b: PostNewClientRequest | PlainMessage<PostNewClientRequest> | undefined): boolean;
}

/**
 * @generated from message cafelogos.pos.PostNewClientResponse
 */
export declare class PostNewClientResponse extends Message<PostNewClientResponse> {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  constructor(data?: PartialMessage<PostNewClientResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "cafelogos.pos.PostNewClientResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PostNewClientResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PostNewClientResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PostNewClientResponse;

  static equals(a: PostNewClientResponse | PlainMessage<PostNewClientResponse> | undefined, b: PostNewClientResponse | PlainMessage<PostNewClientResponse> | undefined): boolean;
}

/**
 * @generated from message cafelogos.pos.UpdateClientRequest
 */
export declare class UpdateClientRequest extends Message<UpdateClientRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  constructor(data?: PartialMessage<UpdateClientRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "cafelogos.pos.UpdateClientRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateClientRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateClientRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateClientRequest;

  static equals(a: UpdateClientRequest | PlainMessage<UpdateClientRequest> | undefined, b: UpdateClientRequest | PlainMessage<UpdateClientRequest> | undefined): boolean;
}

/**
 * @generated from message cafelogos.pos.GetDiscountsResponse
 */
export declare class GetDiscountsResponse extends Message<GetDiscountsResponse> {
  /**
   * @generated from field: repeated cafelogos.pos.Discount discounts = 1;
   */
  discounts: Discount[];

  constructor(data?: PartialMessage<GetDiscountsResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "cafelogos.pos.GetDiscountsResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetDiscountsResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetDiscountsResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetDiscountsResponse;

  static equals(a: GetDiscountsResponse | PlainMessage<GetDiscountsResponse> | undefined, b: GetDiscountsResponse | PlainMessage<GetDiscountsResponse> | undefined): boolean;
}

/**
 * @generated from message cafelogos.pos.PostDiscountRequest
 */
export declare class PostDiscountRequest extends Message<PostDiscountRequest> {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: cafelogos.pos.DiscountType type = 2;
   */
  type: DiscountType;

  /**
   * @generated from field: uint64 discount_price = 3;
   */
  discountPrice: bigint;

  constructor(data?: PartialMessage<PostDiscountRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "cafelogos.pos.PostDiscountRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PostDiscountRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PostDiscountRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PostDiscountRequest;

  static equals(a: PostDiscountRequest | PlainMessage<PostDiscountRequest> | undefined, b: PostDiscountRequest | PlainMessage<PostDiscountRequest> | undefined): boolean;
}

/**
 * @generated from message cafelogos.pos.GetDailySalesRequest
 */
export declare class GetDailySalesRequest extends Message<GetDailySalesRequest> {
  /**
   * ISO8601形式 (YYYY-MM-DD)
   *
   * @generated from field: string start_date = 1;
   */
  startDate: string;

  /**
   * ISO8601形式 (YYYY-MM-DD)
   *
   * @generated from field: string end_date = 2;
   */
  endDate: string;

  constructor(data?: PartialMessage<GetDailySalesRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "cafelogos.pos.GetDailySalesRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetDailySalesRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetDailySalesRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetDailySalesRequest;

  static equals(a: GetDailySalesRequest | PlainMessage<GetDailySalesRequest> | undefined, b: GetDailySalesRequest | PlainMessage<GetDailySalesRequest> | undefined): boolean;
}

/**
 * @generated from message cafelogos.pos.GetDailySalesResponse
 */
export declare class GetDailySalesResponse extends Message<GetDailySalesResponse> {
  /**
   * @generated from field: repeated cafelogos.pos.DailySale daily_sales = 1;
   */
  dailySales: DailySale[];

  constructor(data?: PartialMessage<GetDailySalesResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "cafelogos.pos.GetDailySalesResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetDailySalesResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetDailySalesResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetDailySalesResponse;

  static equals(a: GetDailySalesResponse | PlainMessage<GetDailySalesResponse> | undefined, b: GetDailySalesResponse | PlainMessage<GetDailySalesResponse> | undefined): boolean;
}

/**
 * @generated from message cafelogos.pos.GetProductSalesRequest
 */
export declare class GetProductSalesRequest extends Message<GetProductSalesRequest> {
  /**
   * ISO8601形式 (YYYY-MM-DD)
   *
   * @generated from field: string start_date = 1;
   */
  startDate: string;

  /**
   * ISO8601形式 (YYYY-MM-DD)
   *
   * @generated from field: string end_date = 2;
   */
  endDate: string;

  constructor(data?: PartialMessage<GetProductSalesRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "cafelogos.pos.GetProductSalesRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetProductSalesRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetProductSalesRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetProductSalesRequest;

  static equals(a: GetProductSalesRequest | PlainMessage<GetProductSalesRequest> | undefined, b: GetProductSalesRequest | PlainMessage<GetProductSalesRequest> | undefined): boolean;
}

/**
 * 時間帯別売上取得用
 *
 * @generated from message cafelogos.pos.GetSalesByTimeSlotRequest
 */
export declare class GetSalesByTimeSlotRequest extends Message<GetSalesByTimeSlotRequest> {
  /**
   * ISO8601形式 (YYYY-MM-DD), デフォルトは今日
   *
   * @generated from field: string date = 1;
   */
  date: string;

  constructor(data?: PartialMessage<GetSalesByTimeSlotRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "cafelogos.pos.GetSalesByTimeSlotRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetSalesByTimeSlotRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetSalesByTimeSlotRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetSalesByTimeSlotRequest;

  static equals(a: GetSalesByTimeSlotRequest | PlainMessage<GetSalesByTimeSlotRequest> | undefined, b: GetSalesByTimeSlotRequest | PlainMessage<GetSalesByTimeSlotRequest> | undefined): boolean;
}

/**
 * @generated from message cafelogos.pos.GetSalesByTimeSlotResponse
 */
export declare class GetSalesByTimeSlotResponse extends Message<GetSalesByTimeSlotResponse> {
  /**
   * @generated from field: repeated cafelogos.pos.TimeSlotSale time_slot_sales = 1;
   */
  timeSlotSales: TimeSlotSale[];

  constructor(data?: PartialMessage<GetSalesByTimeSlotResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "cafelogos.pos.GetSalesByTimeSlotResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetSalesByTimeSlotResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetSalesByTimeSlotResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetSalesByTimeSlotResponse;

  static equals(a: GetSalesByTimeSlotResponse | PlainMessage<GetSalesByTimeSlotResponse> | undefined, b: GetSalesByTimeSlotResponse | PlainMessage<GetSalesByTimeSlotResponse> | undefined): boolean;
}

/**
 * @generated from message cafelogos.pos.TimeSlotSale
 */
export declare class TimeSlotSale extends Message<TimeSlotSale> {
  /**
   * ISO8601形式 (YYYY-MM-DDTHH:MM:SS), 時間帯の開始時刻
   *
   * @generated from field: string start_date = 1;
   */
  startDate: string;

  /**
   * ISO8601形式 (YYYY-MM-DDTHH:MM:SS), 時間帯の終了時刻
   *
   * @generated from field: string end_date = 2;
   */
  endDate: string;

  /**
   * 総売上
   *
   * @generated from field: uint64 total_sales = 3;
   */
  totalSales: bigint;

  /**
   * 総数量
   *
   * @generated from field: uint64 total_quantity = 4;
   */
  totalQuantity: bigint;

  constructor(data?: PartialMessage<TimeSlotSale>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "cafelogos.pos.TimeSlotSale";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TimeSlotSale;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TimeSlotSale;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TimeSlotSale;

  static equals(a: TimeSlotSale | PlainMessage<TimeSlotSale> | undefined, b: TimeSlotSale | PlainMessage<TimeSlotSale> | undefined): boolean;
}

/**
 * 支払い方法別売上取得用
 *
 * @generated from message cafelogos.pos.GetSalesByPaymentTypeRequest
 */
export declare class GetSalesByPaymentTypeRequest extends Message<GetSalesByPaymentTypeRequest> {
  /**
   * ISO8601形式 (YYYY-MM-DD)
   *
   * @generated from field: string start_date = 1;
   */
  startDate: string;

  /**
   * ISO8601形式 (YYYY-MM-DD)
   *
   * @generated from field: string end_date = 2;
   */
  endDate: string;

  constructor(data?: PartialMessage<GetSalesByPaymentTypeRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "cafelogos.pos.GetSalesByPaymentTypeRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetSalesByPaymentTypeRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetSalesByPaymentTypeRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetSalesByPaymentTypeRequest;

  static equals(a: GetSalesByPaymentTypeRequest | PlainMessage<GetSalesByPaymentTypeRequest> | undefined, b: GetSalesByPaymentTypeRequest | PlainMessage<GetSalesByPaymentTypeRequest> | undefined): boolean;
}

/**
 * @generated from message cafelogos.pos.GetSalesByPaymentTypeResponse
 */
export declare class GetSalesByPaymentTypeResponse extends Message<GetSalesByPaymentTypeResponse> {
  /**
   * @generated from field: repeated cafelogos.pos.PaymentTypeSale payment_type_sales = 1;
   */
  paymentTypeSales: PaymentTypeSale[];

  constructor(data?: PartialMessage<GetSalesByPaymentTypeResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "cafelogos.pos.GetSalesByPaymentTypeResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetSalesByPaymentTypeResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetSalesByPaymentTypeResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetSalesByPaymentTypeResponse;

  static equals(a: GetSalesByPaymentTypeResponse | PlainMessage<GetSalesByPaymentTypeResponse> | undefined, b: GetSalesByPaymentTypeResponse | PlainMessage<GetSalesByPaymentTypeResponse> | undefined): boolean;
}

/**
 * @generated from message cafelogos.pos.PaymentTypeSale
 */
export declare class PaymentTypeSale extends Message<PaymentTypeSale> {
  /**
   * 0: Cash, 1: External
   *
   * @generated from field: int32 payment_type = 1;
   */
  paymentType: number;

  /**
   * 総売上
   *
   * @generated from field: uint64 total_sales = 3;
   */
  totalSales: bigint;

  /**
   * 総数量
   *
   * @generated from field: uint64 total_quantity = 4;
   */
  totalQuantity: bigint;

  constructor(data?: PartialMessage<PaymentTypeSale>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "cafelogos.pos.PaymentTypeSale";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PaymentTypeSale;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PaymentTypeSale;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PaymentTypeSale;

  static equals(a: PaymentTypeSale | PlainMessage<PaymentTypeSale> | undefined, b: PaymentTypeSale | PlainMessage<PaymentTypeSale> | undefined): boolean;
}

/**
 * @generated from message cafelogos.pos.GetProductSalesResponse
 */
export declare class GetProductSalesResponse extends Message<GetProductSalesResponse> {
  /**
   * @generated from field: repeated cafelogos.pos.ProductSale product_sales = 1;
   */
  productSales: ProductSale[];

  constructor(data?: PartialMessage<GetProductSalesResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "cafelogos.pos.GetProductSalesResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetProductSalesResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetProductSalesResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetProductSalesResponse;

  static equals(a: GetProductSalesResponse | PlainMessage<GetProductSalesResponse> | undefined, b: GetProductSalesResponse | PlainMessage<GetProductSalesResponse> | undefined): boolean;
}

/**
 * * Product 
 *
 * @generated from message cafelogos.pos.Product
 */
export declare class Product extends Message<Product> {
  /**
   * @generated from field: string product_id = 1;
   */
  productId: string;

  /**
   * @generated from field: string product_name = 2;
   */
  productName: string;

  /**
   * @generated from field: cafelogos.pos.ProductCategory product_category = 3;
   */
  productCategory?: ProductCategory;

  /**
   * @generated from field: cafelogos.pos.ProductType product_type = 4;
   */
  productType: ProductType;

  /**
   * @generated from field: string product_color = 5;
   */
  productColor: string;

  /**
   * @generated from field: bool is_now_sales = 6;
   */
  isNowSales: boolean;

  /**
   * @generated from field: string created_at = 7;
   */
  createdAt: string;

  /**
   * @generated from field: string updated_at = 8;
   */
  updatedAt: string;

  /**
   * Only Coffee
   *
   * @generated from field: cafelogos.pos.CoffeeBean coffee_bean = 9;
   */
  coffeeBean?: CoffeeBean;

  /**
   * @generated from field: repeated cafelogos.pos.CoffeeBrew coffee_brews = 10;
   */
  coffeeBrews: CoffeeBrew[];

  /**
   * Only Other
   *
   * @generated from field: uint64 amount = 11;
   */
  amount: bigint;

  /**
   * @generated from field: cafelogos.pos.Stock stock = 12;
   */
  stock?: Stock;

  /**
   * Only Admin
   *
   * 注文管理を行うかどうか
   *
   * @generated from field: bool is_managing_order = 20;
   */
  isManagingOrder: boolean;

  /**
   * OrderLinkでキッチン機能を使うかどうか
   *
   * @generated from field: bool is_ol_kitchen = 21;
   */
  isOlKitchen: boolean;

  constructor(data?: PartialMessage<Product>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "cafelogos.pos.Product";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Product;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Product;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Product;

  static equals(a: Product | PlainMessage<Product> | undefined, b: Product | PlainMessage<Product> | undefined): boolean;
}

/**
 * @generated from message cafelogos.pos.ProductParam
 */
export declare class ProductParam extends Message<ProductParam> {
  /**
   * @generated from field: string product_name = 1;
   */
  productName: string;

  /**
   * @generated from field: string product_category_id = 2;
   */
  productCategoryId: string;

  /**
   * @generated from field: cafelogos.pos.ProductType product_type = 3;
   */
  productType: ProductType;

  /**
   * @generated from field: bool is_now_sales = 4;
   */
  isNowSales: boolean;

  /**
   * @generated from field: string product_color = 5;
   */
  productColor: string;

  /**
   * Only Coffee
   *
   * @generated from field: string coffee_bean_id = 6;
   */
  coffeeBeanId: string;

  /**
   * @generated from field: repeated cafelogos.pos.CoffeeBrew coffee_brews = 7;
   */
  coffeeBrews: CoffeeBrew[];

  /**
   * Only Other
   *
   * @generated from field: uint64 amount = 8;
   */
  amount: bigint;

  /**
   * @generated from field: string stock_id = 9;
   */
  stockId: string;

  /**
   * Only Admin
   *
   * 注文管理を行うかどうか
   *
   * @generated from field: bool is_managing_order = 20;
   */
  isManagingOrder: boolean;

  /**
   * OrderLinkでキッチン機能を使うかどうか
   *
   * @generated from field: bool is_ol_use_kitchen = 21;
   */
  isOlUseKitchen: boolean;

  constructor(data?: PartialMessage<ProductParam>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "cafelogos.pos.ProductParam";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProductParam;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProductParam;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProductParam;

  static equals(a: ProductParam | PlainMessage<ProductParam> | undefined, b: ProductParam | PlainMessage<ProductParam> | undefined): boolean;
}

/**
 * @generated from message cafelogos.pos.ProductCategory
 */
export declare class ProductCategory extends Message<ProductCategory> {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * @generated from field: string created_at = 3;
   */
  createdAt: string;

  /**
   * @generated from field: string updated_at = 4;
   */
  updatedAt: string;

  constructor(data?: PartialMessage<ProductCategory>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "cafelogos.pos.ProductCategory";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProductCategory;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProductCategory;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProductCategory;

  static equals(a: ProductCategory | PlainMessage<ProductCategory> | undefined, b: ProductCategory | PlainMessage<ProductCategory> | undefined): boolean;
}

/**
 * @generated from message cafelogos.pos.CoffeeBean
 */
export declare class CoffeeBean extends Message<CoffeeBean> {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * @generated from field: int32 gram_quantity = 3;
   */
  gramQuantity: number;

  /**
   * @generated from field: string created_at = 4;
   */
  createdAt: string;

  /**
   * @generated from field: string updated_at = 5;
   */
  updatedAt: string;

  constructor(data?: PartialMessage<CoffeeBean>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "cafelogos.pos.CoffeeBean";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CoffeeBean;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CoffeeBean;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CoffeeBean;

  static equals(a: CoffeeBean | PlainMessage<CoffeeBean> | undefined, b: CoffeeBean | PlainMessage<CoffeeBean> | undefined): boolean;
}

/**
 * @generated from message cafelogos.pos.CoffeeBrew
 */
export declare class CoffeeBrew extends Message<CoffeeBrew> {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * @generated from field: uint32 bean_quantity_grams = 3;
   */
  beanQuantityGrams: number;

  /**
   * @generated from field: uint64 amount = 4;
   */
  amount: bigint;

  /**
   * @generated from field: string created_at = 5;
   */
  createdAt: string;

  /**
   * @generated from field: string updated_at = 6;
   */
  updatedAt: string;

  constructor(data?: PartialMessage<CoffeeBrew>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "cafelogos.pos.CoffeeBrew";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CoffeeBrew;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CoffeeBrew;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CoffeeBrew;

  static equals(a: CoffeeBrew | PlainMessage<CoffeeBrew> | undefined, b: CoffeeBrew | PlainMessage<CoffeeBrew> | undefined): boolean;
}

/**
 * @generated from message cafelogos.pos.Stock
 */
export declare class Stock extends Message<Stock> {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * @generated from field: uint32 quantity = 3;
   */
  quantity: number;

  /**
   * @generated from field: string created_at = 4;
   */
  createdAt: string;

  /**
   * @generated from field: string updated_at = 5;
   */
  updatedAt: string;

  constructor(data?: PartialMessage<Stock>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "cafelogos.pos.Stock";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Stock;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Stock;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Stock;

  static equals(a: Stock | PlainMessage<Stock> | undefined, b: Stock | PlainMessage<Stock> | undefined): boolean;
}

/**
 * @generated from message cafelogos.pos.Order
 */
export declare class Order extends Message<Order> {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: repeated cafelogos.pos.OrderItem items = 2;
   */
  items: OrderItem[];

  /**
   * @generated from field: repeated cafelogos.pos.OrderDiscount discounts = 3;
   */
  discounts: OrderDiscount[];

  /**
   * @generated from field: cafelogos.pos.OrderType order_type = 4;
   */
  orderType: OrderType;

  /**
   * @generated from field: string order_at = 5;
   */
  orderAt: string;

  /**
   * @generated from field: string call_number = 6;
   */
  callNumber: string;

  /**
   * @generated from field: string client_id = 7;
   */
  clientId: string;

  /**
   * @generated from field: string seat_name = 8;
   */
  seatName: string;

  constructor(data?: PartialMessage<Order>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "cafelogos.pos.Order";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Order;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Order;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Order;

  static equals(a: Order | PlainMessage<Order> | undefined, b: Order | PlainMessage<Order> | undefined): boolean;
}

/**
 * @generated from message cafelogos.pos.OrderParam
 */
export declare class OrderParam extends Message<OrderParam> {
  /**
   * * 代入した場合は代入したIDが使用され、しなかったら生成される 
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: repeated cafelogos.pos.OrderItem items = 2;
   */
  items: OrderItem[];

  /**
   * @generated from field: repeated cafelogos.pos.OrderDiscount discounts = 3;
   */
  discounts: OrderDiscount[];

  /**
   * @generated from field: cafelogos.pos.OrderType order_type = 4;
   */
  orderType: OrderType;

  /**
   * @generated from field: string order_at = 5;
   */
  orderAt: string;

  /**
   * @generated from field: string client_id = 6;
   */
  clientId: string;

  /**
   * @generated from field: string seat_id = 7;
   */
  seatId: string;

  constructor(data?: PartialMessage<OrderParam>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "cafelogos.pos.OrderParam";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OrderParam;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OrderParam;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OrderParam;

  static equals(a: OrderParam | PlainMessage<OrderParam> | undefined, b: OrderParam | PlainMessage<OrderParam> | undefined): boolean;
}

/**
 * @generated from message cafelogos.pos.OrderItem
 */
export declare class OrderItem extends Message<OrderItem> {
  /**
   * @generated from field: string product_id = 1;
   */
  productId: string;

  /**
   * @generated from field: uint32 quantity = 2;
   */
  quantity: number;

  /**
   * @generated from field: uint64 amount = 3;
   */
  amount: bigint;

  /**
   * @generated from field: string coffee_brew_id = 4;
   */
  coffeeBrewId: string;

  constructor(data?: PartialMessage<OrderItem>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "cafelogos.pos.OrderItem";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OrderItem;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OrderItem;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OrderItem;

  static equals(a: OrderItem | PlainMessage<OrderItem> | undefined, b: OrderItem | PlainMessage<OrderItem> | undefined): boolean;
}

/**
 * @generated from message cafelogos.pos.OrderDiscount
 */
export declare class OrderDiscount extends Message<OrderDiscount> {
  /**
   * * 一旦何も入ってない 
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string discount_id = 2;
   */
  discountId: string;

  /**
   * @generated from field: cafelogos.pos.DiscountType type = 3;
   */
  type: DiscountType;

  /**
   * @generated from field: uint64 discount_price = 4;
   */
  discountPrice: bigint;

  constructor(data?: PartialMessage<OrderDiscount>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "cafelogos.pos.OrderDiscount";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OrderDiscount;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OrderDiscount;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OrderDiscount;

  static equals(a: OrderDiscount | PlainMessage<OrderDiscount> | undefined, b: OrderDiscount | PlainMessage<OrderDiscount> | undefined): boolean;
}

/**
 * @generated from message cafelogos.pos.Discount
 */
export declare class Discount extends Message<Discount> {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * @generated from field: cafelogos.pos.DiscountType type = 3;
   */
  type: DiscountType;

  /**
   * @generated from field: uint64 discount_price = 4;
   */
  discountPrice: bigint;

  constructor(data?: PartialMessage<Discount>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "cafelogos.pos.Discount";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Discount;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Discount;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Discount;

  static equals(a: Discount | PlainMessage<Discount> | undefined, b: Discount | PlainMessage<Discount> | undefined): boolean;
}

/**
 * @generated from message cafelogos.pos.Payment
 */
export declare class Payment extends Message<Payment> {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: int32 type = 2;
   */
  type: number;

  /**
   * @generated from field: uint64 receive_amount = 3;
   */
  receiveAmount: bigint;

  /**
   * @generated from field: uint64 payment_amount = 4;
   */
  paymentAmount: bigint;

  /**
   * @generated from field: uint64 change_amount = 5;
   */
  changeAmount: bigint;

  /**
   * @generated from field: string payment_at = 6;
   */
  paymentAt: string;

  /**
   * @generated from field: string updated_at = 7;
   */
  updatedAt: string;

  constructor(data?: PartialMessage<Payment>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "cafelogos.pos.Payment";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Payment;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Payment;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Payment;

  static equals(a: Payment | PlainMessage<Payment> | undefined, b: Payment | PlainMessage<Payment> | undefined): boolean;
}

/**
 * @generated from message cafelogos.pos.PaymentParam
 */
export declare class PaymentParam extends Message<PaymentParam> {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: int32 type = 2;
   */
  type: number;

  /**
   * @generated from field: uint64 receive_amount = 3;
   */
  receiveAmount: bigint;

  /**
   * @generated from field: uint64 payment_amount = 4;
   */
  paymentAmount: bigint;

  /**
   * @generated from field: uint64 change_amount = 5;
   */
  changeAmount: bigint;

  /**
   * @generated from field: string payment_at = 6;
   */
  paymentAt: string;

  /**
   * @generated from field: string updated_at = 7;
   */
  updatedAt: string;

  /**
   * @generated from oneof cafelogos.pos.PaymentParam.method
   */
  method: {
    /**
     * @generated from field: cafelogos.pos.PaymentCashParam cash = 8;
     */
    value: PaymentCashParam;
    case: "cash";
  } | {
    /**
     * @generated from field: cafelogos.pos.PaymentExternalParam external = 9;
     */
    value: PaymentExternalParam;
    case: "external";
  } | { case: undefined; value?: undefined };

  constructor(data?: PartialMessage<PaymentParam>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "cafelogos.pos.PaymentParam";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PaymentParam;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PaymentParam;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PaymentParam;

  static equals(a: PaymentParam | PlainMessage<PaymentParam> | undefined, b: PaymentParam | PlainMessage<PaymentParam> | undefined): boolean;
}

/**
 * @generated from message cafelogos.pos.PaymentCashParam
 */
export declare class PaymentCashParam extends Message<PaymentCashParam> {
  constructor(data?: PartialMessage<PaymentCashParam>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "cafelogos.pos.PaymentCashParam";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PaymentCashParam;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PaymentCashParam;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PaymentCashParam;

  static equals(a: PaymentCashParam | PlainMessage<PaymentCashParam> | undefined, b: PaymentCashParam | PlainMessage<PaymentCashParam> | undefined): boolean;
}

/**
 * @generated from message cafelogos.pos.PaymentExternalParam
 */
export declare class PaymentExternalParam extends Message<PaymentExternalParam> {
  /**
   * @generated from field: string payment_type = 1;
   */
  paymentType: string;

  /**
   * @generated from field: string external_device_id = 2;
   */
  externalDeviceId: string;

  constructor(data?: PartialMessage<PaymentExternalParam>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "cafelogos.pos.PaymentExternalParam";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PaymentExternalParam;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PaymentExternalParam;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PaymentExternalParam;

  static equals(a: PaymentExternalParam | PlainMessage<PaymentExternalParam> | undefined, b: PaymentExternalParam | PlainMessage<PaymentExternalParam> | undefined): boolean;
}

/**
 * @generated from message cafelogos.pos.PaymentExternal
 */
export declare class PaymentExternal extends Message<PaymentExternal> {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string payment_id = 2;
   */
  paymentId: string;

  /**
   * @generated from field: string payment_type = 3;
   */
  paymentType: string;

  /**
   * @generated from field: string status = 4;
   */
  status: string;

  /**
   * @generated from field: string external_service_id = 5;
   */
  externalServiceId: string;

  /**
   * @generated from field: string external_device_id = 6;
   */
  externalDeviceId: string;

  /**
   * @generated from field: string created_at = 7;
   */
  createdAt: string;

  /**
   * @generated from field: string updated_at = 8;
   */
  updatedAt: string;

  constructor(data?: PartialMessage<PaymentExternal>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "cafelogos.pos.PaymentExternal";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PaymentExternal;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PaymentExternal;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PaymentExternal;

  static equals(a: PaymentExternal | PlainMessage<PaymentExternal> | undefined, b: PaymentExternal | PlainMessage<PaymentExternal> | undefined): boolean;
}

/**
 * @generated from message cafelogos.pos.Seat
 */
export declare class Seat extends Message<Seat> {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  constructor(data?: PartialMessage<Seat>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "cafelogos.pos.Seat";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Seat;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Seat;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Seat;

  static equals(a: Seat | PlainMessage<Seat> | undefined, b: Seat | PlainMessage<Seat> | undefined): boolean;
}

/**
 * @generated from message cafelogos.pos.DailySale
 */
export declare class DailySale extends Message<DailySale> {
  /**
   * ISO8601形式 (YYYY-MM-DD)
   *
   * @generated from field: string date = 1;
   */
  date: string;

  /**
   * 総売上
   *
   * @generated from field: uint64 total_sales = 2;
   */
  totalSales: bigint;

  /**
   * 総数量
   *
   * @generated from field: uint64 total_quantity = 3;
   */
  totalQuantity: bigint;

  constructor(data?: PartialMessage<DailySale>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "cafelogos.pos.DailySale";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DailySale;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DailySale;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DailySale;

  static equals(a: DailySale | PlainMessage<DailySale> | undefined, b: DailySale | PlainMessage<DailySale> | undefined): boolean;
}

/**
 * @generated from message cafelogos.pos.ProductSale
 */
export declare class ProductSale extends Message<ProductSale> {
  /**
   * @generated from field: string product_id = 1;
   */
  productId: string;

  /**
   * @generated from field: string product_name = 2;
   */
  productName: string;

  /**
   * 総売上
   *
   * @generated from field: uint64 total_sales = 3;
   */
  totalSales: bigint;

  /**
   * 総数量
   *
   * @generated from field: uint64 total_quantity = 4;
   */
  totalQuantity: bigint;

  /**
   * コーヒー淹れ方用のフィールド
   *
   * コーヒー淹れ方ID
   *
   * @generated from field: string coffee_brew_id = 7;
   */
  coffeeBrewId: string;

  /**
   * コーヒー淹れ方名
   *
   * @generated from field: string coffee_brew_name = 8;
   */
  coffeeBrewName: string;

  constructor(data?: PartialMessage<ProductSale>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "cafelogos.pos.ProductSale";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProductSale;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProductSale;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProductSale;

  static equals(a: ProductSale | PlainMessage<ProductSale> | undefined, b: ProductSale | PlainMessage<ProductSale> | undefined): boolean;
}

