// @generated by protoc-gen-es v2.2.3 with parameter "target=ts+js+dts"
// @generated from file pos/pos_service.proto (package cafelogos.pos, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";
import type { EmptySchema } from "../common/common_pb";

/**
 * Describes the file pos/pos_service.proto.
 */
export declare const file_pos_pos_service: GenFile;

/**
 * *
 * Request/Response
 *
 * @generated from message cafelogos.pos.GetOrdersRequest
 */
export declare type GetOrdersRequest = Message<"cafelogos.pos.GetOrdersRequest"> & {
};

/**
 * Describes the message cafelogos.pos.GetOrdersRequest.
 * Use `create(GetOrdersRequestSchema)` to create a new message.
 */
export declare const GetOrdersRequestSchema: GenMessage<GetOrdersRequest>;

/**
 * @generated from message cafelogos.pos.GetOrdersResponse
 */
export declare type GetOrdersResponse = Message<"cafelogos.pos.GetOrdersResponse"> & {
  /**
   * @generated from field: repeated cafelogos.pos.Order orders = 1;
   */
  orders: Order[];
};

/**
 * Describes the message cafelogos.pos.GetOrdersResponse.
 * Use `create(GetOrdersResponseSchema)` to create a new message.
 */
export declare const GetOrdersResponseSchema: GenMessage<GetOrdersResponse>;

/**
 * @generated from message cafelogos.pos.GetOrderResponse
 */
export declare type GetOrderResponse = Message<"cafelogos.pos.GetOrderResponse"> & {
  /**
   * @generated from field: cafelogos.pos.Order order = 1;
   */
  order?: Order;
};

/**
 * Describes the message cafelogos.pos.GetOrderResponse.
 * Use `create(GetOrderResponseSchema)` to create a new message.
 */
export declare const GetOrderResponseSchema: GenMessage<GetOrderResponse>;

/**
 * @generated from message cafelogos.pos.GetUnpaidOrdersBySeatIdRequest
 */
export declare type GetUnpaidOrdersBySeatIdRequest = Message<"cafelogos.pos.GetUnpaidOrdersBySeatIdRequest"> & {
  /**
   * @generated from field: string seat_id = 1;
   */
  seatId: string;
};

/**
 * Describes the message cafelogos.pos.GetUnpaidOrdersBySeatIdRequest.
 * Use `create(GetUnpaidOrdersBySeatIdRequestSchema)` to create a new message.
 */
export declare const GetUnpaidOrdersBySeatIdRequestSchema: GenMessage<GetUnpaidOrdersBySeatIdRequest>;

/**
 * @generated from message cafelogos.pos.PostOrderRequest
 */
export declare type PostOrderRequest = Message<"cafelogos.pos.PostOrderRequest"> & {
  /**
   * @generated from field: cafelogos.pos.OrderParam order = 1;
   */
  order?: OrderParam;

  /**
   * @generated from field: cafelogos.pos.PostOrderOption option = 2;
   */
  option?: PostOrderOption;
};

/**
 * Describes the message cafelogos.pos.PostOrderRequest.
 * Use `create(PostOrderRequestSchema)` to create a new message.
 */
export declare const PostOrderRequestSchema: GenMessage<PostOrderRequest>;

/**
 * @generated from message cafelogos.pos.PostOrderOption
 */
export declare type PostOrderOption = Message<"cafelogos.pos.PostOrderOption"> & {
  /**
   * @generated from field: bool is_post_orderlink = 1;
   */
  isPostOrderlink: boolean;
};

/**
 * Describes the message cafelogos.pos.PostOrderOption.
 * Use `create(PostOrderOptionSchema)` to create a new message.
 */
export declare const PostOrderOptionSchema: GenMessage<PostOrderOption>;

/**
 * @generated from message cafelogos.pos.PostOrderResponse
 */
export declare type PostOrderResponse = Message<"cafelogos.pos.PostOrderResponse"> & {
  /**
   * @generated from field: cafelogos.pos.PostOrderResponse.Code code = 1;
   */
  code: PostOrderResponse_Code;

  /**
   * @generated from field: string error_message = 2;
   */
  errorMessage: string;

  /**
   * @generated from field: string call_number = 3;
   */
  callNumber: string;
};

/**
 * Describes the message cafelogos.pos.PostOrderResponse.
 * Use `create(PostOrderResponseSchema)` to create a new message.
 */
export declare const PostOrderResponseSchema: GenMessage<PostOrderResponse>;

/**
 * @generated from enum cafelogos.pos.PostOrderResponse.Code
 */
export enum PostOrderResponse_Code {
  /**
   * @generated from enum value: OK = 0;
   */
  OK = 0,

  /**
   * @generated from enum value: SOLD_OUT_PRODUCT = 1;
   */
  SOLD_OUT_PRODUCT = 1,

  /**
   * @generated from enum value: NOT_SOLD_PRODUCT = 2;
   */
  NOT_SOLD_PRODUCT = 2,

  /**
   * @generated from enum value: OTHER = 3;
   */
  OTHER = 3,
}

/**
 * Describes the enum cafelogos.pos.PostOrderResponse.Code.
 */
export declare const PostOrderResponse_CodeSchema: GenEnum<PostOrderResponse_Code>;

/**
 * @generated from message cafelogos.pos.PostPaymentRequest
 */
export declare type PostPaymentRequest = Message<"cafelogos.pos.PostPaymentRequest"> & {
  /**
   * @generated from field: cafelogos.pos.PaymentParam payment = 1;
   */
  payment?: PaymentParam;

  /**
   * @generated from field: repeated cafelogos.pos.OrderParam post_orders = 2;
   */
  postOrders: OrderParam[];

  /**
   * @generated from field: repeated string order_ids = 3;
   */
  orderIds: string[];

  /**
   * @generated from field: cafelogos.pos.PostPaymentRequestOption option = 4;
   */
  option?: PostPaymentRequestOption;
};

/**
 * Describes the message cafelogos.pos.PostPaymentRequest.
 * Use `create(PostPaymentRequestSchema)` to create a new message.
 */
export declare const PostPaymentRequestSchema: GenMessage<PostPaymentRequest>;

/**
 * @generated from message cafelogos.pos.PostPaymentRequestOption
 */
export declare type PostPaymentRequestOption = Message<"cafelogos.pos.PostPaymentRequestOption"> & {
  /**
   * @generated from field: bool is_post_orderlink = 1;
   */
  isPostOrderlink: boolean;
};

/**
 * Describes the message cafelogos.pos.PostPaymentRequestOption.
 * Use `create(PostPaymentRequestOptionSchema)` to create a new message.
 */
export declare const PostPaymentRequestOptionSchema: GenMessage<PostPaymentRequestOption>;

/**
 * @generated from message cafelogos.pos.UpdatePaymentRequest
 */
export declare type UpdatePaymentRequest = Message<"cafelogos.pos.UpdatePaymentRequest"> & {
  /**
   * @generated from field: cafelogos.pos.PaymentParam payment = 1;
   */
  payment?: PaymentParam;
};

/**
 * Describes the message cafelogos.pos.UpdatePaymentRequest.
 * Use `create(UpdatePaymentRequestSchema)` to create a new message.
 */
export declare const UpdatePaymentRequestSchema: GenMessage<UpdatePaymentRequest>;

/**
 * @generated from message cafelogos.pos.PaymentResponse
 */
export declare type PaymentResponse = Message<"cafelogos.pos.PaymentResponse"> & {
  /**
   * @generated from field: int32 status = 1;
   */
  status: number;

  /**
   * @generated from field: cafelogos.pos.Payment payment = 2;
   */
  payment?: Payment;

  /**
   * @generated from field: repeated cafelogos.pos.PostOrderResponse order_responses = 3;
   */
  orderResponses: PostOrderResponse[];
};

/**
 * Describes the message cafelogos.pos.PaymentResponse.
 * Use `create(PaymentResponseSchema)` to create a new message.
 */
export declare const PaymentResponseSchema: GenMessage<PaymentResponse>;

/**
 * @generated from message cafelogos.pos.GetExternalPaymentRequest
 */
export declare type GetExternalPaymentRequest = Message<"cafelogos.pos.GetExternalPaymentRequest"> & {
  /**
   * @generated from field: string payment_id = 1;
   */
  paymentId: string;
};

/**
 * Describes the message cafelogos.pos.GetExternalPaymentRequest.
 * Use `create(GetExternalPaymentRequestSchema)` to create a new message.
 */
export declare const GetExternalPaymentRequestSchema: GenMessage<GetExternalPaymentRequest>;

/**
 * @generated from message cafelogos.pos.GetExternalPaymentResponse
 */
export declare type GetExternalPaymentResponse = Message<"cafelogos.pos.GetExternalPaymentResponse"> & {
  /**
   * @generated from field: cafelogos.pos.PaymentExternal external_payment = 1;
   */
  externalPayment?: PaymentExternal;
};

/**
 * Describes the message cafelogos.pos.GetExternalPaymentResponse.
 * Use `create(GetExternalPaymentResponseSchema)` to create a new message.
 */
export declare const GetExternalPaymentResponseSchema: GenMessage<GetExternalPaymentResponse>;

/**
 * @generated from message cafelogos.pos.RefundPaymentRequest
 */
export declare type RefundPaymentRequest = Message<"cafelogos.pos.RefundPaymentRequest"> & {
  /**
   * @generated from field: string payment_id = 1;
   */
  paymentId: string;
};

/**
 * Describes the message cafelogos.pos.RefundPaymentRequest.
 * Use `create(RefundPaymentRequestSchema)` to create a new message.
 */
export declare const RefundPaymentRequestSchema: GenMessage<RefundPaymentRequest>;

/**
 * @generated from message cafelogos.pos.RefundPaymentResponse
 */
export declare type RefundPaymentResponse = Message<"cafelogos.pos.RefundPaymentResponse"> & {
  /**
   * @generated from field: int32 status = 1;
   */
  status: number;

  /**
   * @generated from field: cafelogos.pos.Payment payment = 2;
   */
  payment?: Payment;
};

/**
 * Describes the message cafelogos.pos.RefundPaymentResponse.
 * Use `create(RefundPaymentResponseSchema)` to create a new message.
 */
export declare const RefundPaymentResponseSchema: GenMessage<RefundPaymentResponse>;

/**
 * @generated from message cafelogos.pos.DeleteOrderRequest
 */
export declare type DeleteOrderRequest = Message<"cafelogos.pos.DeleteOrderRequest"> & {
  /**
   * @generated from field: string order_id = 1;
   */
  orderId: string;
};

/**
 * Describes the message cafelogos.pos.DeleteOrderRequest.
 * Use `create(DeleteOrderRequestSchema)` to create a new message.
 */
export declare const DeleteOrderRequestSchema: GenMessage<DeleteOrderRequest>;

/**
 * @generated from message cafelogos.pos.GetProductsResponse
 */
export declare type GetProductsResponse = Message<"cafelogos.pos.GetProductsResponse"> & {
  /**
   * @generated from field: repeated cafelogos.pos.Product products = 1;
   */
  products: Product[];
};

/**
 * Describes the message cafelogos.pos.GetProductsResponse.
 * Use `create(GetProductsResponseSchema)` to create a new message.
 */
export declare const GetProductsResponseSchema: GenMessage<GetProductsResponse>;

/**
 * @generated from message cafelogos.pos.GetProductCategoriesResponse
 */
export declare type GetProductCategoriesResponse = Message<"cafelogos.pos.GetProductCategoriesResponse"> & {
  /**
   * @generated from field: repeated cafelogos.pos.ProductCategory product_categories = 1;
   */
  productCategories: ProductCategory[];
};

/**
 * Describes the message cafelogos.pos.GetProductCategoriesResponse.
 * Use `create(GetProductCategoriesResponseSchema)` to create a new message.
 */
export declare const GetProductCategoriesResponseSchema: GenMessage<GetProductCategoriesResponse>;

/**
 * @generated from message cafelogos.pos.PostProductCategoryRequest
 */
export declare type PostProductCategoryRequest = Message<"cafelogos.pos.PostProductCategoryRequest"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message cafelogos.pos.PostProductCategoryRequest.
 * Use `create(PostProductCategoryRequestSchema)` to create a new message.
 */
export declare const PostProductCategoryRequestSchema: GenMessage<PostProductCategoryRequest>;

/**
 * @generated from message cafelogos.pos.PostProductRequest
 */
export declare type PostProductRequest = Message<"cafelogos.pos.PostProductRequest"> & {
  /**
   * @generated from field: cafelogos.pos.ProductParam product = 1;
   */
  product?: ProductParam;
};

/**
 * Describes the message cafelogos.pos.PostProductRequest.
 * Use `create(PostProductRequestSchema)` to create a new message.
 */
export declare const PostProductRequestSchema: GenMessage<PostProductRequest>;

/**
 * @generated from message cafelogos.pos.UpdateProductRequest
 */
export declare type UpdateProductRequest = Message<"cafelogos.pos.UpdateProductRequest"> & {
  /**
   * @generated from field: string product_id = 1;
   */
  productId: string;

  /**
   * @generated from field: cafelogos.pos.ProductParam product = 2;
   */
  product?: ProductParam;
};

/**
 * Describes the message cafelogos.pos.UpdateProductRequest.
 * Use `create(UpdateProductRequestSchema)` to create a new message.
 */
export declare const UpdateProductRequestSchema: GenMessage<UpdateProductRequest>;

/**
 * @generated from message cafelogos.pos.DeleteProductRequest
 */
export declare type DeleteProductRequest = Message<"cafelogos.pos.DeleteProductRequest"> & {
  /**
   * @generated from field: string product_id = 1;
   */
  productId: string;
};

/**
 * Describes the message cafelogos.pos.DeleteProductRequest.
 * Use `create(DeleteProductRequestSchema)` to create a new message.
 */
export declare const DeleteProductRequestSchema: GenMessage<DeleteProductRequest>;

/**
 * @generated from message cafelogos.pos.PostStockRequest
 */
export declare type PostStockRequest = Message<"cafelogos.pos.PostStockRequest"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: uint32 quantity = 2;
   */
  quantity: number;
};

/**
 * Describes the message cafelogos.pos.PostStockRequest.
 * Use `create(PostStockRequestSchema)` to create a new message.
 */
export declare const PostStockRequestSchema: GenMessage<PostStockRequest>;

/**
 * @generated from message cafelogos.pos.GetStocksResponse
 */
export declare type GetStocksResponse = Message<"cafelogos.pos.GetStocksResponse"> & {
  /**
   * @generated from field: repeated cafelogos.pos.Stock stocks = 1;
   */
  stocks: Stock[];
};

/**
 * Describes the message cafelogos.pos.GetStocksResponse.
 * Use `create(GetStocksResponseSchema)` to create a new message.
 */
export declare const GetStocksResponseSchema: GenMessage<GetStocksResponse>;

/**
 * @generated from message cafelogos.pos.UpdateStockRequest
 */
export declare type UpdateStockRequest = Message<"cafelogos.pos.UpdateStockRequest"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * @generated from field: uint32 quantity = 3;
   */
  quantity: number;
};

/**
 * Describes the message cafelogos.pos.UpdateStockRequest.
 * Use `create(UpdateStockRequestSchema)` to create a new message.
 */
export declare const UpdateStockRequestSchema: GenMessage<UpdateStockRequest>;

/**
 * @generated from message cafelogos.pos.PostCoffeeBeanRequest
 */
export declare type PostCoffeeBeanRequest = Message<"cafelogos.pos.PostCoffeeBeanRequest"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: int32 gram_quantity = 2;
   */
  gramQuantity: number;
};

/**
 * Describes the message cafelogos.pos.PostCoffeeBeanRequest.
 * Use `create(PostCoffeeBeanRequestSchema)` to create a new message.
 */
export declare const PostCoffeeBeanRequestSchema: GenMessage<PostCoffeeBeanRequest>;

/**
 * @generated from message cafelogos.pos.GetCoffeeBeansResponse
 */
export declare type GetCoffeeBeansResponse = Message<"cafelogos.pos.GetCoffeeBeansResponse"> & {
  /**
   * @generated from field: repeated cafelogos.pos.CoffeeBean coffee_beans = 1;
   */
  coffeeBeans: CoffeeBean[];
};

/**
 * Describes the message cafelogos.pos.GetCoffeeBeansResponse.
 * Use `create(GetCoffeeBeansResponseSchema)` to create a new message.
 */
export declare const GetCoffeeBeansResponseSchema: GenMessage<GetCoffeeBeansResponse>;

/**
 * @generated from message cafelogos.pos.PostSeatRequest
 */
export declare type PostSeatRequest = Message<"cafelogos.pos.PostSeatRequest"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message cafelogos.pos.PostSeatRequest.
 * Use `create(PostSeatRequestSchema)` to create a new message.
 */
export declare const PostSeatRequestSchema: GenMessage<PostSeatRequest>;

/**
 * @generated from message cafelogos.pos.UpdateSeatRequest
 */
export declare type UpdateSeatRequest = Message<"cafelogos.pos.UpdateSeatRequest"> & {
  /**
   * @generated from field: cafelogos.pos.Seat seat = 1;
   */
  seat?: Seat;
};

/**
 * Describes the message cafelogos.pos.UpdateSeatRequest.
 * Use `create(UpdateSeatRequestSchema)` to create a new message.
 */
export declare const UpdateSeatRequestSchema: GenMessage<UpdateSeatRequest>;

/**
 * @generated from message cafelogos.pos.DeleteSeatRequest
 */
export declare type DeleteSeatRequest = Message<"cafelogos.pos.DeleteSeatRequest"> & {
  /**
   * @generated from field: string seat_id = 1;
   */
  seatId: string;
};

/**
 * Describes the message cafelogos.pos.DeleteSeatRequest.
 * Use `create(DeleteSeatRequestSchema)` to create a new message.
 */
export declare const DeleteSeatRequestSchema: GenMessage<DeleteSeatRequest>;

/**
 * @generated from message cafelogos.pos.GetSeatsResponse
 */
export declare type GetSeatsResponse = Message<"cafelogos.pos.GetSeatsResponse"> & {
  /**
   * @generated from field: repeated cafelogos.pos.Seat seats = 1;
   */
  seats: Seat[];
};

/**
 * Describes the message cafelogos.pos.GetSeatsResponse.
 * Use `create(GetSeatsResponseSchema)` to create a new message.
 */
export declare const GetSeatsResponseSchema: GenMessage<GetSeatsResponse>;

/**
 * @generated from message cafelogos.pos.PostNewClientRequest
 */
export declare type PostNewClientRequest = Message<"cafelogos.pos.PostNewClientRequest"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;
};

/**
 * Describes the message cafelogos.pos.PostNewClientRequest.
 * Use `create(PostNewClientRequestSchema)` to create a new message.
 */
export declare const PostNewClientRequestSchema: GenMessage<PostNewClientRequest>;

/**
 * @generated from message cafelogos.pos.PostNewClientResponse
 */
export declare type PostNewClientResponse = Message<"cafelogos.pos.PostNewClientResponse"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;
};

/**
 * Describes the message cafelogos.pos.PostNewClientResponse.
 * Use `create(PostNewClientResponseSchema)` to create a new message.
 */
export declare const PostNewClientResponseSchema: GenMessage<PostNewClientResponse>;

/**
 * @generated from message cafelogos.pos.UpdateClientRequest
 */
export declare type UpdateClientRequest = Message<"cafelogos.pos.UpdateClientRequest"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;
};

/**
 * Describes the message cafelogos.pos.UpdateClientRequest.
 * Use `create(UpdateClientRequestSchema)` to create a new message.
 */
export declare const UpdateClientRequestSchema: GenMessage<UpdateClientRequest>;

/**
 * @generated from message cafelogos.pos.GetDiscountsResponse
 */
export declare type GetDiscountsResponse = Message<"cafelogos.pos.GetDiscountsResponse"> & {
  /**
   * @generated from field: repeated cafelogos.pos.Discount discounts = 1;
   */
  discounts: Discount[];
};

/**
 * Describes the message cafelogos.pos.GetDiscountsResponse.
 * Use `create(GetDiscountsResponseSchema)` to create a new message.
 */
export declare const GetDiscountsResponseSchema: GenMessage<GetDiscountsResponse>;

/**
 * @generated from message cafelogos.pos.PostDiscountRequest
 */
export declare type PostDiscountRequest = Message<"cafelogos.pos.PostDiscountRequest"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: cafelogos.pos.DiscountType type = 2;
   */
  type: DiscountType;

  /**
   * @generated from field: uint64 discount_price = 3;
   */
  discountPrice: bigint;
};

/**
 * Describes the message cafelogos.pos.PostDiscountRequest.
 * Use `create(PostDiscountRequestSchema)` to create a new message.
 */
export declare const PostDiscountRequestSchema: GenMessage<PostDiscountRequest>;

/**
 * @generated from message cafelogos.pos.GetDailySalesRequest
 */
export declare type GetDailySalesRequest = Message<"cafelogos.pos.GetDailySalesRequest"> & {
  /**
   * ISO8601形式 (YYYY-MM-DD)
   *
   * @generated from field: string start_date = 1;
   */
  startDate: string;

  /**
   * ISO8601形式 (YYYY-MM-DD)
   *
   * @generated from field: string end_date = 2;
   */
  endDate: string;
};

/**
 * Describes the message cafelogos.pos.GetDailySalesRequest.
 * Use `create(GetDailySalesRequestSchema)` to create a new message.
 */
export declare const GetDailySalesRequestSchema: GenMessage<GetDailySalesRequest>;

/**
 * @generated from message cafelogos.pos.GetDailySalesResponse
 */
export declare type GetDailySalesResponse = Message<"cafelogos.pos.GetDailySalesResponse"> & {
  /**
   * @generated from field: repeated cafelogos.pos.DailySale daily_sales = 1;
   */
  dailySales: DailySale[];
};

/**
 * Describes the message cafelogos.pos.GetDailySalesResponse.
 * Use `create(GetDailySalesResponseSchema)` to create a new message.
 */
export declare const GetDailySalesResponseSchema: GenMessage<GetDailySalesResponse>;

/**
 * @generated from message cafelogos.pos.GetProductSalesRequest
 */
export declare type GetProductSalesRequest = Message<"cafelogos.pos.GetProductSalesRequest"> & {
  /**
   * ISO8601形式 (YYYY-MM-DD)
   *
   * @generated from field: string start_date = 1;
   */
  startDate: string;

  /**
   * ISO8601形式 (YYYY-MM-DD)
   *
   * @generated from field: string end_date = 2;
   */
  endDate: string;
};

/**
 * Describes the message cafelogos.pos.GetProductSalesRequest.
 * Use `create(GetProductSalesRequestSchema)` to create a new message.
 */
export declare const GetProductSalesRequestSchema: GenMessage<GetProductSalesRequest>;

/**
 * 時間帯別売上取得用
 *
 * @generated from message cafelogos.pos.GetSalesByTimeSlotRequest
 */
export declare type GetSalesByTimeSlotRequest = Message<"cafelogos.pos.GetSalesByTimeSlotRequest"> & {
  /**
   * ISO8601形式 (YYYY-MM-DD), デフォルトは今日
   *
   * @generated from field: string date = 1;
   */
  date: string;
};

/**
 * Describes the message cafelogos.pos.GetSalesByTimeSlotRequest.
 * Use `create(GetSalesByTimeSlotRequestSchema)` to create a new message.
 */
export declare const GetSalesByTimeSlotRequestSchema: GenMessage<GetSalesByTimeSlotRequest>;

/**
 * @generated from message cafelogos.pos.GetSalesByTimeSlotResponse
 */
export declare type GetSalesByTimeSlotResponse = Message<"cafelogos.pos.GetSalesByTimeSlotResponse"> & {
  /**
   * @generated from field: repeated cafelogos.pos.TimeSlotSale time_slot_sales = 1;
   */
  timeSlotSales: TimeSlotSale[];
};

/**
 * Describes the message cafelogos.pos.GetSalesByTimeSlotResponse.
 * Use `create(GetSalesByTimeSlotResponseSchema)` to create a new message.
 */
export declare const GetSalesByTimeSlotResponseSchema: GenMessage<GetSalesByTimeSlotResponse>;

/**
 * @generated from message cafelogos.pos.TimeSlotSale
 */
export declare type TimeSlotSale = Message<"cafelogos.pos.TimeSlotSale"> & {
  /**
   * ISO8601形式 (YYYY-MM-DDTHH:MM:SS), 時間帯の開始時刻
   *
   * @generated from field: string start_date = 1;
   */
  startDate: string;

  /**
   * ISO8601形式 (YYYY-MM-DDTHH:MM:SS), 時間帯の終了時刻
   *
   * @generated from field: string end_date = 2;
   */
  endDate: string;

  /**
   * 総売上
   *
   * @generated from field: uint64 total_sales = 3;
   */
  totalSales: bigint;

  /**
   * 総数量
   *
   * @generated from field: uint64 total_quantity = 4;
   */
  totalQuantity: bigint;
};

/**
 * Describes the message cafelogos.pos.TimeSlotSale.
 * Use `create(TimeSlotSaleSchema)` to create a new message.
 */
export declare const TimeSlotSaleSchema: GenMessage<TimeSlotSale>;

/**
 * 支払い方法別売上取得用
 *
 * @generated from message cafelogos.pos.GetSalesByPaymentTypeRequest
 */
export declare type GetSalesByPaymentTypeRequest = Message<"cafelogos.pos.GetSalesByPaymentTypeRequest"> & {
  /**
   * ISO8601形式 (YYYY-MM-DD)
   *
   * @generated from field: string start_date = 1;
   */
  startDate: string;

  /**
   * ISO8601形式 (YYYY-MM-DD)
   *
   * @generated from field: string end_date = 2;
   */
  endDate: string;
};

/**
 * Describes the message cafelogos.pos.GetSalesByPaymentTypeRequest.
 * Use `create(GetSalesByPaymentTypeRequestSchema)` to create a new message.
 */
export declare const GetSalesByPaymentTypeRequestSchema: GenMessage<GetSalesByPaymentTypeRequest>;

/**
 * @generated from message cafelogos.pos.GetSalesByPaymentTypeResponse
 */
export declare type GetSalesByPaymentTypeResponse = Message<"cafelogos.pos.GetSalesByPaymentTypeResponse"> & {
  /**
   * @generated from field: repeated cafelogos.pos.PaymentTypeSale payment_type_sales = 1;
   */
  paymentTypeSales: PaymentTypeSale[];
};

/**
 * Describes the message cafelogos.pos.GetSalesByPaymentTypeResponse.
 * Use `create(GetSalesByPaymentTypeResponseSchema)` to create a new message.
 */
export declare const GetSalesByPaymentTypeResponseSchema: GenMessage<GetSalesByPaymentTypeResponse>;

/**
 * @generated from message cafelogos.pos.PaymentTypeSale
 */
export declare type PaymentTypeSale = Message<"cafelogos.pos.PaymentTypeSale"> & {
  /**
   * 0: Cash, 1: External
   *
   * @generated from field: int32 payment_type = 1;
   */
  paymentType: number;

  /**
   * 総売上
   *
   * @generated from field: uint64 total_sales = 3;
   */
  totalSales: bigint;

  /**
   * 総数量
   *
   * @generated from field: uint64 total_quantity = 4;
   */
  totalQuantity: bigint;
};

/**
 * Describes the message cafelogos.pos.PaymentTypeSale.
 * Use `create(PaymentTypeSaleSchema)` to create a new message.
 */
export declare const PaymentTypeSaleSchema: GenMessage<PaymentTypeSale>;

/**
 * @generated from message cafelogos.pos.GetProductSalesResponse
 */
export declare type GetProductSalesResponse = Message<"cafelogos.pos.GetProductSalesResponse"> & {
  /**
   * @generated from field: repeated cafelogos.pos.ProductSale product_sales = 1;
   */
  productSales: ProductSale[];
};

/**
 * Describes the message cafelogos.pos.GetProductSalesResponse.
 * Use `create(GetProductSalesResponseSchema)` to create a new message.
 */
export declare const GetProductSalesResponseSchema: GenMessage<GetProductSalesResponse>;

/**
 * * Product 
 *
 * @generated from message cafelogos.pos.Product
 */
export declare type Product = Message<"cafelogos.pos.Product"> & {
  /**
   * @generated from field: string product_id = 1;
   */
  productId: string;

  /**
   * @generated from field: string product_name = 2;
   */
  productName: string;

  /**
   * @generated from field: cafelogos.pos.ProductCategory product_category = 3;
   */
  productCategory?: ProductCategory;

  /**
   * @generated from field: cafelogos.pos.ProductType product_type = 4;
   */
  productType: ProductType;

  /**
   * @generated from field: string product_color = 5;
   */
  productColor: string;

  /**
   * @generated from field: bool is_now_sales = 6;
   */
  isNowSales: boolean;

  /**
   * @generated from field: string created_at = 7;
   */
  createdAt: string;

  /**
   * @generated from field: string updated_at = 8;
   */
  updatedAt: string;

  /**
   * Only Coffee
   *
   * @generated from field: cafelogos.pos.CoffeeBean coffee_bean = 9;
   */
  coffeeBean?: CoffeeBean;

  /**
   * @generated from field: repeated cafelogos.pos.CoffeeBrew coffee_brews = 10;
   */
  coffeeBrews: CoffeeBrew[];

  /**
   * Only Other
   *
   * @generated from field: uint64 amount = 11;
   */
  amount: bigint;

  /**
   * @generated from field: cafelogos.pos.Stock stock = 12;
   */
  stock?: Stock;

  /**
   * Only Admin
   *
   * 注文管理を行うかどうか
   *
   * @generated from field: bool is_managing_order = 20;
   */
  isManagingOrder: boolean;

  /**
   * OrderLinkでキッチン機能を使うかどうか
   *
   * @generated from field: bool is_ol_kitchen = 21;
   */
  isOlKitchen: boolean;
};

/**
 * Describes the message cafelogos.pos.Product.
 * Use `create(ProductSchema)` to create a new message.
 */
export declare const ProductSchema: GenMessage<Product>;

/**
 * @generated from message cafelogos.pos.ProductParam
 */
export declare type ProductParam = Message<"cafelogos.pos.ProductParam"> & {
  /**
   * @generated from field: string product_name = 1;
   */
  productName: string;

  /**
   * @generated from field: string product_category_id = 2;
   */
  productCategoryId: string;

  /**
   * @generated from field: cafelogos.pos.ProductType product_type = 3;
   */
  productType: ProductType;

  /**
   * @generated from field: bool is_now_sales = 4;
   */
  isNowSales: boolean;

  /**
   * @generated from field: string product_color = 5;
   */
  productColor: string;

  /**
   * Only Coffee
   *
   * @generated from field: string coffee_bean_id = 6;
   */
  coffeeBeanId: string;

  /**
   * @generated from field: repeated cafelogos.pos.CoffeeBrew coffee_brews = 7;
   */
  coffeeBrews: CoffeeBrew[];

  /**
   * Only Other
   *
   * @generated from field: uint64 amount = 8;
   */
  amount: bigint;

  /**
   * @generated from field: string stock_id = 9;
   */
  stockId: string;

  /**
   * Only Admin
   *
   * 注文管理を行うかどうか
   *
   * @generated from field: bool is_managing_order = 20;
   */
  isManagingOrder: boolean;

  /**
   * OrderLinkでキッチン機能を使うかどうか
   *
   * @generated from field: bool is_ol_use_kitchen = 21;
   */
  isOlUseKitchen: boolean;
};

/**
 * Describes the message cafelogos.pos.ProductParam.
 * Use `create(ProductParamSchema)` to create a new message.
 */
export declare const ProductParamSchema: GenMessage<ProductParam>;

/**
 * @generated from message cafelogos.pos.ProductCategory
 */
export declare type ProductCategory = Message<"cafelogos.pos.ProductCategory"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * @generated from field: string created_at = 3;
   */
  createdAt: string;

  /**
   * @generated from field: string updated_at = 4;
   */
  updatedAt: string;
};

/**
 * Describes the message cafelogos.pos.ProductCategory.
 * Use `create(ProductCategorySchema)` to create a new message.
 */
export declare const ProductCategorySchema: GenMessage<ProductCategory>;

/**
 * @generated from message cafelogos.pos.CoffeeBean
 */
export declare type CoffeeBean = Message<"cafelogos.pos.CoffeeBean"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * @generated from field: int32 gram_quantity = 3;
   */
  gramQuantity: number;

  /**
   * @generated from field: string created_at = 4;
   */
  createdAt: string;

  /**
   * @generated from field: string updated_at = 5;
   */
  updatedAt: string;
};

/**
 * Describes the message cafelogos.pos.CoffeeBean.
 * Use `create(CoffeeBeanSchema)` to create a new message.
 */
export declare const CoffeeBeanSchema: GenMessage<CoffeeBean>;

/**
 * @generated from message cafelogos.pos.CoffeeBrew
 */
export declare type CoffeeBrew = Message<"cafelogos.pos.CoffeeBrew"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * @generated from field: uint32 bean_quantity_grams = 3;
   */
  beanQuantityGrams: number;

  /**
   * @generated from field: uint64 amount = 4;
   */
  amount: bigint;

  /**
   * @generated from field: string created_at = 5;
   */
  createdAt: string;

  /**
   * @generated from field: string updated_at = 6;
   */
  updatedAt: string;
};

/**
 * Describes the message cafelogos.pos.CoffeeBrew.
 * Use `create(CoffeeBrewSchema)` to create a new message.
 */
export declare const CoffeeBrewSchema: GenMessage<CoffeeBrew>;

/**
 * @generated from message cafelogos.pos.Stock
 */
export declare type Stock = Message<"cafelogos.pos.Stock"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * @generated from field: uint32 quantity = 3;
   */
  quantity: number;

  /**
   * @generated from field: string created_at = 4;
   */
  createdAt: string;

  /**
   * @generated from field: string updated_at = 5;
   */
  updatedAt: string;
};

/**
 * Describes the message cafelogos.pos.Stock.
 * Use `create(StockSchema)` to create a new message.
 */
export declare const StockSchema: GenMessage<Stock>;

/**
 * @generated from message cafelogos.pos.Order
 */
export declare type Order = Message<"cafelogos.pos.Order"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: repeated cafelogos.pos.OrderItem items = 2;
   */
  items: OrderItem[];

  /**
   * @generated from field: repeated cafelogos.pos.OrderDiscount discounts = 3;
   */
  discounts: OrderDiscount[];

  /**
   * @generated from field: cafelogos.pos.OrderType order_type = 4;
   */
  orderType: OrderType;

  /**
   * @generated from field: string order_at = 5;
   */
  orderAt: string;

  /**
   * @generated from field: string call_number = 6;
   */
  callNumber: string;

  /**
   * @generated from field: string client_id = 7;
   */
  clientId: string;

  /**
   * @generated from field: string seat_name = 8;
   */
  seatName: string;

  /**
   * @generated from field: string payment_id = 9;
   */
  paymentId: string;
};

/**
 * Describes the message cafelogos.pos.Order.
 * Use `create(OrderSchema)` to create a new message.
 */
export declare const OrderSchema: GenMessage<Order>;

/**
 * @generated from message cafelogos.pos.OrderParam
 */
export declare type OrderParam = Message<"cafelogos.pos.OrderParam"> & {
  /**
   * * 代入した場合は代入したIDが使用され、しなかったら生成される 
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: repeated cafelogos.pos.OrderItem items = 2;
   */
  items: OrderItem[];

  /**
   * @generated from field: repeated cafelogos.pos.OrderDiscount discounts = 3;
   */
  discounts: OrderDiscount[];

  /**
   * @generated from field: cafelogos.pos.OrderType order_type = 4;
   */
  orderType: OrderType;

  /**
   * @generated from field: string order_at = 5;
   */
  orderAt: string;

  /**
   * @generated from field: string client_id = 6;
   */
  clientId: string;

  /**
   * @generated from field: string seat_id = 7;
   */
  seatId: string;
};

/**
 * Describes the message cafelogos.pos.OrderParam.
 * Use `create(OrderParamSchema)` to create a new message.
 */
export declare const OrderParamSchema: GenMessage<OrderParam>;

/**
 * @generated from message cafelogos.pos.OrderItem
 */
export declare type OrderItem = Message<"cafelogos.pos.OrderItem"> & {
  /**
   * @generated from field: string product_id = 1;
   */
  productId: string;

  /**
   * @generated from field: uint32 quantity = 2;
   */
  quantity: number;

  /**
   * @generated from field: uint64 amount = 3;
   */
  amount: bigint;

  /**
   * @generated from field: string coffee_brew_id = 4;
   */
  coffeeBrewId: string;
};

/**
 * Describes the message cafelogos.pos.OrderItem.
 * Use `create(OrderItemSchema)` to create a new message.
 */
export declare const OrderItemSchema: GenMessage<OrderItem>;

/**
 * @generated from message cafelogos.pos.OrderDiscount
 */
export declare type OrderDiscount = Message<"cafelogos.pos.OrderDiscount"> & {
  /**
   * * 一旦何も入ってない 
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string discount_id = 2;
   */
  discountId: string;

  /**
   * @generated from field: cafelogos.pos.DiscountType type = 3;
   */
  type: DiscountType;

  /**
   * @generated from field: uint64 discount_price = 4;
   */
  discountPrice: bigint;
};

/**
 * Describes the message cafelogos.pos.OrderDiscount.
 * Use `create(OrderDiscountSchema)` to create a new message.
 */
export declare const OrderDiscountSchema: GenMessage<OrderDiscount>;

/**
 * @generated from message cafelogos.pos.Discount
 */
export declare type Discount = Message<"cafelogos.pos.Discount"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * @generated from field: cafelogos.pos.DiscountType type = 3;
   */
  type: DiscountType;

  /**
   * @generated from field: uint64 discount_price = 4;
   */
  discountPrice: bigint;
};

/**
 * Describes the message cafelogos.pos.Discount.
 * Use `create(DiscountSchema)` to create a new message.
 */
export declare const DiscountSchema: GenMessage<Discount>;

/**
 * @generated from message cafelogos.pos.Payment
 */
export declare type Payment = Message<"cafelogos.pos.Payment"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: int32 type = 2;
   */
  type: number;

  /**
   * @generated from field: uint64 receive_amount = 3;
   */
  receiveAmount: bigint;

  /**
   * @generated from field: uint64 payment_amount = 4;
   */
  paymentAmount: bigint;

  /**
   * @generated from field: uint64 change_amount = 5;
   */
  changeAmount: bigint;

  /**
   * @generated from field: string payment_at = 6;
   */
  paymentAt: string;

  /**
   * @generated from field: string updated_at = 7;
   */
  updatedAt: string;
};

/**
 * Describes the message cafelogos.pos.Payment.
 * Use `create(PaymentSchema)` to create a new message.
 */
export declare const PaymentSchema: GenMessage<Payment>;

/**
 * @generated from message cafelogos.pos.PaymentParam
 */
export declare type PaymentParam = Message<"cafelogos.pos.PaymentParam"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: int32 type = 2;
   */
  type: number;

  /**
   * @generated from field: uint64 receive_amount = 3;
   */
  receiveAmount: bigint;

  /**
   * @generated from field: uint64 payment_amount = 4;
   */
  paymentAmount: bigint;

  /**
   * @generated from field: uint64 change_amount = 5;
   */
  changeAmount: bigint;

  /**
   * @generated from field: string payment_at = 6;
   */
  paymentAt: string;

  /**
   * @generated from field: string updated_at = 7;
   */
  updatedAt: string;

  /**
   * @generated from oneof cafelogos.pos.PaymentParam.method
   */
  method: {
    /**
     * @generated from field: cafelogos.pos.PaymentCashParam cash = 8;
     */
    value: PaymentCashParam;
    case: "cash";
  } | {
    /**
     * @generated from field: cafelogos.pos.PaymentExternalParam external = 9;
     */
    value: PaymentExternalParam;
    case: "external";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message cafelogos.pos.PaymentParam.
 * Use `create(PaymentParamSchema)` to create a new message.
 */
export declare const PaymentParamSchema: GenMessage<PaymentParam>;

/**
 * @generated from message cafelogos.pos.PaymentCashParam
 */
export declare type PaymentCashParam = Message<"cafelogos.pos.PaymentCashParam"> & {
};

/**
 * Describes the message cafelogos.pos.PaymentCashParam.
 * Use `create(PaymentCashParamSchema)` to create a new message.
 */
export declare const PaymentCashParamSchema: GenMessage<PaymentCashParam>;

/**
 * @generated from message cafelogos.pos.PaymentExternalParam
 */
export declare type PaymentExternalParam = Message<"cafelogos.pos.PaymentExternalParam"> & {
  /**
   * @generated from field: string payment_type = 1;
   */
  paymentType: string;

  /**
   * @generated from field: string external_device_id = 2;
   */
  externalDeviceId: string;
};

/**
 * Describes the message cafelogos.pos.PaymentExternalParam.
 * Use `create(PaymentExternalParamSchema)` to create a new message.
 */
export declare const PaymentExternalParamSchema: GenMessage<PaymentExternalParam>;

/**
 * @generated from message cafelogos.pos.PaymentExternal
 */
export declare type PaymentExternal = Message<"cafelogos.pos.PaymentExternal"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string payment_id = 2;
   */
  paymentId: string;

  /**
   * @generated from field: string payment_type = 3;
   */
  paymentType: string;

  /**
   * @generated from field: string status = 4;
   */
  status: string;

  /**
   * @generated from field: string external_service_id = 5;
   */
  externalServiceId: string;

  /**
   * @generated from field: string external_device_id = 6;
   */
  externalDeviceId: string;

  /**
   * @generated from field: string created_at = 7;
   */
  createdAt: string;

  /**
   * @generated from field: string updated_at = 8;
   */
  updatedAt: string;
};

/**
 * Describes the message cafelogos.pos.PaymentExternal.
 * Use `create(PaymentExternalSchema)` to create a new message.
 */
export declare const PaymentExternalSchema: GenMessage<PaymentExternal>;

/**
 * @generated from message cafelogos.pos.Seat
 */
export declare type Seat = Message<"cafelogos.pos.Seat"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;
};

/**
 * Describes the message cafelogos.pos.Seat.
 * Use `create(SeatSchema)` to create a new message.
 */
export declare const SeatSchema: GenMessage<Seat>;

/**
 * @generated from message cafelogos.pos.DailySale
 */
export declare type DailySale = Message<"cafelogos.pos.DailySale"> & {
  /**
   * ISO8601形式 (YYYY-MM-DD)
   *
   * @generated from field: string date = 1;
   */
  date: string;

  /**
   * 総売上
   *
   * @generated from field: uint64 total_sales = 2;
   */
  totalSales: bigint;

  /**
   * 総数量
   *
   * @generated from field: uint64 total_quantity = 3;
   */
  totalQuantity: bigint;
};

/**
 * Describes the message cafelogos.pos.DailySale.
 * Use `create(DailySaleSchema)` to create a new message.
 */
export declare const DailySaleSchema: GenMessage<DailySale>;

/**
 * @generated from message cafelogos.pos.ProductSale
 */
export declare type ProductSale = Message<"cafelogos.pos.ProductSale"> & {
  /**
   * @generated from field: string product_id = 1;
   */
  productId: string;

  /**
   * @generated from field: string product_name = 2;
   */
  productName: string;

  /**
   * 総売上
   *
   * @generated from field: uint64 total_sales = 3;
   */
  totalSales: bigint;

  /**
   * 総数量
   *
   * @generated from field: uint64 total_quantity = 4;
   */
  totalQuantity: bigint;

  /**
   * コーヒー淹れ方用のフィールド
   *
   * コーヒー淹れ方ID
   *
   * @generated from field: string coffee_brew_id = 7;
   */
  coffeeBrewId: string;

  /**
   * コーヒー淹れ方名
   *
   * @generated from field: string coffee_brew_name = 8;
   */
  coffeeBrewName: string;
};

/**
 * Describes the message cafelogos.pos.ProductSale.
 * Use `create(ProductSaleSchema)` to create a new message.
 */
export declare const ProductSaleSchema: GenMessage<ProductSale>;

/**
 * @generated from enum cafelogos.pos.ProductType
 */
export enum ProductType {
  /**
   * @generated from enum value: COFFEE = 0;
   */
  COFFEE = 0,

  /**
   * @generated from enum value: OTHER = 1;
   */
  OTHER = 1,
}

/**
 * Describes the enum cafelogos.pos.ProductType.
 */
export declare const ProductTypeSchema: GenEnum<ProductType>;

/**
 * * Order 
 *
 * @generated from enum cafelogos.pos.OrderType
 */
export enum OrderType {
  /**
   * @generated from enum value: EatIn = 0;
   */
  EatIn = 0,

  /**
   * @generated from enum value: TakeOut = 1;
   */
  TakeOut = 1,
}

/**
 * Describes the enum cafelogos.pos.OrderType.
 */
export declare const OrderTypeSchema: GenEnum<OrderType>;

/**
 * @generated from enum cafelogos.pos.DiscountType
 */
export enum DiscountType {
  /**
   * @generated from enum value: PRICE = 0;
   */
  PRICE = 0,
}

/**
 * Describes the enum cafelogos.pos.DiscountType.
 */
export declare const DiscountTypeSchema: GenEnum<DiscountType>;

/**
 * @generated from service cafelogos.pos.PosService
 */
export declare const PosService: GenService<{
  /**
   * @generated from rpc cafelogos.pos.PosService.GetOrders
   */
  getOrders: {
    methodKind: "unary";
    input: typeof GetOrdersRequestSchema;
    output: typeof GetOrdersResponseSchema;
  },
  /**
   * @generated from rpc cafelogos.pos.PosService.GetUnpaidOrdersBySeatId
   */
  getUnpaidOrdersBySeatId: {
    methodKind: "unary";
    input: typeof GetUnpaidOrdersBySeatIdRequestSchema;
    output: typeof GetOrdersResponseSchema;
  },
  /**
   * @generated from rpc cafelogos.pos.PosService.PostOrder
   */
  postOrder: {
    methodKind: "unary";
    input: typeof PostOrderRequestSchema;
    output: typeof PostOrderResponseSchema;
  },
  /**
   * @generated from rpc cafelogos.pos.PosService.DeleteOrder
   */
  deleteOrder: {
    methodKind: "unary";
    input: typeof DeleteOrderRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * @generated from rpc cafelogos.pos.PosService.PostPayment
   */
  postPayment: {
    methodKind: "unary";
    input: typeof PostPaymentRequestSchema;
    output: typeof PaymentResponseSchema;
  },
  /**
   * @generated from rpc cafelogos.pos.PosService.UpdatePayment
   */
  updatePayment: {
    methodKind: "unary";
    input: typeof UpdatePaymentRequestSchema;
    output: typeof PaymentResponseSchema;
  },
  /**
   * @generated from rpc cafelogos.pos.PosService.GetExternalPayment
   */
  getExternalPayment: {
    methodKind: "unary";
    input: typeof GetExternalPaymentRequestSchema;
    output: typeof GetExternalPaymentResponseSchema;
  },
  /**
   * @generated from rpc cafelogos.pos.PosService.RefundPayment
   */
  refundPayment: {
    methodKind: "unary";
    input: typeof RefundPaymentRequestSchema;
    output: typeof RefundPaymentResponseSchema;
  },
  /**
   * @generated from rpc cafelogos.pos.PosService.GetProducts
   */
  getProducts: {
    methodKind: "unary";
    input: typeof EmptySchema;
    output: typeof GetProductsResponseSchema;
  },
  /**
   * @generated from rpc cafelogos.pos.PosService.PostNewClient
   */
  postNewClient: {
    methodKind: "unary";
    input: typeof PostNewClientRequestSchema;
    output: typeof PostNewClientResponseSchema;
  },
  /**
   * @generated from rpc cafelogos.pos.PosService.UpdateClient
   */
  updateClient: {
    methodKind: "unary";
    input: typeof UpdateClientRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * Only Admin
   *
   * @generated from rpc cafelogos.pos.PosService.GetProductCategories
   */
  getProductCategories: {
    methodKind: "unary";
    input: typeof EmptySchema;
    output: typeof GetProductCategoriesResponseSchema;
  },
  /**
   * @generated from rpc cafelogos.pos.PosService.PostProductCategory
   */
  postProductCategory: {
    methodKind: "unary";
    input: typeof PostProductCategoryRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * @generated from rpc cafelogos.pos.PosService.PostProduct
   */
  postProduct: {
    methodKind: "unary";
    input: typeof PostProductRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * @generated from rpc cafelogos.pos.PosService.UpdateProduct
   */
  updateProduct: {
    methodKind: "unary";
    input: typeof UpdateProductRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * @generated from rpc cafelogos.pos.PosService.DeleteProduct
   */
  deleteProduct: {
    methodKind: "unary";
    input: typeof DeleteProductRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * @generated from rpc cafelogos.pos.PosService.PostStock
   */
  postStock: {
    methodKind: "unary";
    input: typeof PostStockRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * @generated from rpc cafelogos.pos.PosService.GetStocks
   */
  getStocks: {
    methodKind: "unary";
    input: typeof EmptySchema;
    output: typeof GetStocksResponseSchema;
  },
  /**
   * @generated from rpc cafelogos.pos.PosService.UpdateStock
   */
  updateStock: {
    methodKind: "unary";
    input: typeof UpdateStockRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * @generated from rpc cafelogos.pos.PosService.PostCoffeeBean
   */
  postCoffeeBean: {
    methodKind: "unary";
    input: typeof PostCoffeeBeanRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * @generated from rpc cafelogos.pos.PosService.GetCoffeeBeans
   */
  getCoffeeBeans: {
    methodKind: "unary";
    input: typeof EmptySchema;
    output: typeof GetCoffeeBeansResponseSchema;
  },
  /**
   * @generated from rpc cafelogos.pos.PosService.DeleteAllOrders
   */
  deleteAllOrders: {
    methodKind: "unary";
    input: typeof EmptySchema;
    output: typeof EmptySchema;
  },
  /**
   * @generated from rpc cafelogos.pos.PosService.PostSeat
   */
  postSeat: {
    methodKind: "unary";
    input: typeof PostSeatRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * @generated from rpc cafelogos.pos.PosService.UpdateSeat
   */
  updateSeat: {
    methodKind: "unary";
    input: typeof UpdateSeatRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * @generated from rpc cafelogos.pos.PosService.DeleteSeat
   */
  deleteSeat: {
    methodKind: "unary";
    input: typeof DeleteSeatRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * @generated from rpc cafelogos.pos.PosService.GetSeats
   */
  getSeats: {
    methodKind: "unary";
    input: typeof EmptySchema;
    output: typeof GetSeatsResponseSchema;
  },
  /**
   * @generated from rpc cafelogos.pos.PosService.GetDiscounts
   */
  getDiscounts: {
    methodKind: "unary";
    input: typeof EmptySchema;
    output: typeof GetDiscountsResponseSchema;
  },
  /**
   * @generated from rpc cafelogos.pos.PosService.PostDiscount
   */
  postDiscount: {
    methodKind: "unary";
    input: typeof PostDiscountRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * @generated from rpc cafelogos.pos.PosService.GetDailySales
   */
  getDailySales: {
    methodKind: "unary";
    input: typeof GetDailySalesRequestSchema;
    output: typeof GetDailySalesResponseSchema;
  },
  /**
   * @generated from rpc cafelogos.pos.PosService.GetProductSales
   */
  getProductSales: {
    methodKind: "unary";
    input: typeof GetProductSalesRequestSchema;
    output: typeof GetProductSalesResponseSchema;
  },
  /**
   * 売上分析用のメソッド
   *
   * @generated from rpc cafelogos.pos.PosService.GetSalesByTimeSlot
   */
  getSalesByTimeSlot: {
    methodKind: "unary";
    input: typeof GetSalesByTimeSlotRequestSchema;
    output: typeof GetSalesByTimeSlotResponseSchema;
  },
  /**
   * @generated from rpc cafelogos.pos.PosService.GetSalesByPaymentType
   */
  getSalesByPaymentType: {
    methodKind: "unary";
    input: typeof GetSalesByPaymentTypeRequestSchema;
    output: typeof GetSalesByPaymentTypeResponseSchema;
  },
}>;

